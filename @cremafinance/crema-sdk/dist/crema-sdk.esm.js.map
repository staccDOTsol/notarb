{"version":3,"file":"crema-sdk.esm.js","sources":["../src/math/liquity.ts","../src/math/tick.ts","../src/util/decimalExt.ts","../src/util/layout.ts","../src/state/positions.ts","../src/state/tick.ts","../src/state/tokenSwap.ts","../node_modules/regenerator-runtime/runtime.js","../src/instructions/instruction.ts","../src/instructions/addUserPosition.ts","../src/instructions/claim.ts","../src/instructions/depositAllTokenTypes.ts","../src/instructions/initialize.ts","../src/instructions/managerClaim.ts","../src/instructions/simulateSwap.ts","../src/instructions/swap.ts","../src/instructions/withdrawAllTokenTypes.ts","../src/util/url.ts","../src/util/transaction.ts","../src/util/token.ts","../src/tokenSwap.ts"],"sourcesContent":["import Decimal from \"decimal.js\";\nimport invariant from \"tiny-invariant\";\n\nimport type { Tick } from \"../state\";\nimport { tick2SqrtPrice } from \".\";\n\n/**\n * Calculate liquity and another token amount when current tick is in [tickLower, tickUpper]\n * @param tickLower The tick lower\n * @param tickUpper The tick upper\n * @param currentSqrtPrice The current sqrt price\n * @param desiredAmountSrc The src token amount\n * @param direct 0(desiredAmountSrc is TokenA), 1(desiredAmountSrc is TokenB)\n * @returns The liquity and dst token amount\n */\nexport function calculateLiquity(\n  tickLower: number,\n  tickUpper: number,\n  desiredAmountSrc: Decimal,\n  currentSqrtPrice: Decimal,\n  direct: number\n): {\n  desiredAmountDst: Decimal;\n  deltaLiquity: Decimal;\n} {\n  invariant(tickLower < tickUpper, \"The tickLower must less than tickUpper\");\n  const lowerSqrtPrice = tick2SqrtPrice(tickLower);\n  const upperSqrtPrice = tick2SqrtPrice(tickUpper);\n  invariant(\n    currentSqrtPrice.greaterThanOrEqualTo(lowerSqrtPrice) &&\n      currentSqrtPrice.lessThanOrEqualTo(upperSqrtPrice),\n    \"The current price must in [lowerPrice,upperPrice]\"\n  );\n  const one = new Decimal(1);\n  if (direct === 0) {\n    const deltaLiquity = desiredAmountSrc.div(\n      one.div(currentSqrtPrice).sub(one.div(upperSqrtPrice))\n    );\n    const desiredAmountDst = deltaLiquity.mul(\n      currentSqrtPrice.sub(lowerSqrtPrice)\n    );\n    return { desiredAmountDst, deltaLiquity };\n  } else {\n    const deltaLiquity = desiredAmountSrc.div(\n      currentSqrtPrice.sub(lowerSqrtPrice)\n    );\n    const desiredAmountDst = deltaLiquity.mul(\n      one.div(currentSqrtPrice).sub(one.div(upperSqrtPrice))\n    );\n    return { desiredAmountDst, deltaLiquity };\n  }\n}\n\n/**\n * Calculate amount out of token A and token B by liquity\n * @param tickLower The tick lower\n * @param tickUpper The tick upper\n * @param currentSqrtPrice The current sqrt price\n * @param liquity The liquity amount\n * @returns The amount of token A and token B\n */\nexport function calculateTokenAmount(\n  tickLower: number,\n  tickUpper: number,\n  liquity: Decimal,\n  currentSqrtPrice: Decimal\n): {\n  amountA: Decimal;\n  amountB: Decimal;\n} {\n  const lowerSqrtPrice = tick2SqrtPrice(tickLower);\n  const upperSqrtPrice = tick2SqrtPrice(tickUpper);\n  if (currentSqrtPrice.lessThan(lowerSqrtPrice)) {\n    return {\n      amountA: liquity.div(lowerSqrtPrice).sub(liquity.div(upperSqrtPrice)),\n      amountB: new Decimal(0),\n    };\n  } else if (currentSqrtPrice.greaterThan(upperSqrtPrice)) {\n    return {\n      amountA: new Decimal(0),\n      amountB: liquity.mul(upperSqrtPrice).sub(liquity.mul(lowerSqrtPrice)),\n    };\n  } else {\n    return {\n      amountA: liquity.div(currentSqrtPrice).sub(liquity.div(upperSqrtPrice)),\n      amountB: liquity.mul(currentSqrtPrice).sub(liquity.mul(lowerSqrtPrice)),\n    };\n  }\n}\n\n/**\n * Calculate liquity when current tick is less than tickLower\n * @param tickLower The tick lower\n * @param tickUpper The tick upper\n * @param desiredAmountA The desired amount of token A\n * @returns the liquity\n */\nexport function calculateLiquityOnlyA(\n  tickLower: number,\n  tickUpper: number,\n  desiredAmountA: Decimal\n): Decimal {\n  invariant(tickLower < tickUpper, \"The tickLower must less than tickUpper\");\n  const lowerSqrtPrice = tick2SqrtPrice(tickLower);\n  const upperSqrtPrice = tick2SqrtPrice(tickUpper);\n  const one = new Decimal(1);\n  return desiredAmountA.div(\n    one.div(lowerSqrtPrice).sub(one.div(upperSqrtPrice))\n  );\n}\n\n/**\n * Calculate liquity when current tick is less than tickLower\n * @param tickLower The tick lower\n * @param tickUpper The tick upper\n * @param desiredAmountA The desired amount of token B\n * @returns The liquity\n */\nexport function calculateLiquityOnlyB(\n  tickLower: number,\n  tickUpper: number,\n  desiredAmountB: Decimal\n): Decimal {\n  invariant(tickLower < tickUpper, \"The tickLower must less than tickUpper\");\n  const lowerSqrtPrice = tick2SqrtPrice(tickLower);\n  const upperSqrtPrice = tick2SqrtPrice(tickUpper);\n  return desiredAmountB.div(upperSqrtPrice.sub(lowerSqrtPrice));\n}\n\nexport interface Liquity {\n  lowerTick: number;\n  upperTick: number;\n  amount: Decimal;\n}\n/**\n * Calculate the liquitys table\n * @param ticks The tick array of token swap\n * @returns The min, max of liquity, and liquitys array\n */\nexport function calculateLiquityTable(ticks: Tick[]): {\n  maxLiquity: Decimal;\n  minLiquity: Decimal;\n  liquitys: Liquity[];\n} {\n  let minLiquity = new Decimal(0);\n  let maxLiquity = new Decimal(0);\n  const liquitys: Liquity[] = [];\n  const liquity: Liquity = {\n    lowerTick: 0,\n    upperTick: 0,\n    amount: new Decimal(0),\n  };\n  for (let i = 0; i < ticks.length; i++) {\n    if (liquity.amount.equals(0)) {\n      liquity.lowerTick = ticks[i].tick;\n      liquity.amount = ticks[i].liquityNet;\n      continue;\n    }\n    liquity.upperTick = ticks[i].tick;\n    minLiquity =\n      liquity.amount.lessThan(minLiquity) || minLiquity.equals(0)\n        ? liquity.amount\n        : minLiquity;\n    maxLiquity = liquity.amount.greaterThan(maxLiquity)\n      ? liquity.amount\n      : maxLiquity;\n    liquitys.push({\n      lowerTick: liquity.lowerTick,\n      upperTick: liquity.upperTick,\n      amount: liquity.amount,\n    });\n    liquity.amount = liquity.amount.add(ticks[i].liquityNet);\n    liquity.lowerTick = ticks[i].tick;\n  }\n  return { maxLiquity, minLiquity, liquitys };\n}\n\n/**\n * Calculate max tokenAmount with sliding point.\n * @param liquity.\n * @param current sqrt price.\n * @param sliding point.\n */\nexport function calculateSlidTokenAmount(\n  tickLower: number,\n  tickUpper: number,\n  liquity: Decimal,\n  currentSqrtPrice: Decimal,\n  slid: Decimal\n): {\n  maxAmountA: Decimal;\n  minAmountA: Decimal;\n  maxAmountB: Decimal;\n  minAmountB: Decimal;\n  amountA: Decimal;\n  amountB: Decimal;\n} {\n  invariant(\n    slid.lessThan(1) && slid.greaterThan(0),\n    `Invalid slid:${slid.toString()}`\n  );\n  const maxSqrtPrice = currentSqrtPrice.mul(new Decimal(1).add(slid).sqrt());\n  const minSqrtPrice = currentSqrtPrice.mul(new Decimal(1).sub(slid).sqrt());\n  const constant = calculateTokenAmount(\n    tickLower,\n    tickUpper,\n    liquity,\n    currentSqrtPrice\n  );\n  const minRes = calculateTokenAmount(\n    tickLower,\n    tickUpper,\n    liquity,\n    minSqrtPrice\n  );\n  const maxRes = calculateTokenAmount(\n    tickLower,\n    tickUpper,\n    liquity,\n    maxSqrtPrice\n  );\n  return {\n    maxAmountA: minRes.amountA,\n    minAmountA: maxRes.amountA,\n    maxAmountB: maxRes.amountB,\n    minAmountB: minRes.amountB,\n    amountA: constant.amountA,\n    amountB: constant.amountB,\n  };\n}\n","import { Decimal } from \"decimal.js\";\nimport invariant from \"tiny-invariant\";\n\nimport type { Tick } from \"../state\";\n\n// The max ticker\nexport const MAX_TICK = 443632;\n// export const MAX_TICK = 552648\n\n// The min ticker\nexport const MIN_TICK = -MAX_TICK;\n\n// The price pieces\n// price = pow(PIECES, TICK)\nexport const PIECES = new Decimal(\"1.0001\");\nexport const PRICE_OFFSET = new Decimal(\"1e-12\");\nexport const MAX_PRICE = PIECES.pow(MAX_TICK).add(PRICE_OFFSET);\nexport const MIN_PRICE = PIECES.pow(MIN_TICK).add(PRICE_OFFSET);\nexport const MAX_SQRT_PRICE = PIECES.pow(MAX_TICK / 2)\n  .add(PRICE_OFFSET)\n  .toDP(12);\nexport const MIN_SQRT_PRICE = PIECES.pow(MIN_TICK / 2)\n  .sub(PRICE_OFFSET)\n  .toDP(12);\n\n/**\n * Get the tick by sqrt price\n *\n * @param sqrtPrice the sqrt price\n  let afterSqrtPrice = liquity.div(amountIn.add(liquity.div(upperSqrtPrice)));\n */\nexport function sqrtPrice2Tick(sqrtPrice: Decimal): number {\n  invariant(\n    sqrtPrice.lessThanOrEqualTo(MAX_SQRT_PRICE),\n    `Invalid sqrtPrice: ${sqrtPrice.toString()} Max: ${MAX_SQRT_PRICE.toString()}, too large`\n  );\n  invariant(\n    sqrtPrice.greaterThanOrEqualTo(MIN_SQRT_PRICE),\n    `Invalid sqrtPrice: ${sqrtPrice.toString()}, Min: ${MIN_SQRT_PRICE.toString()}, too small`\n  );\n  return sqrtPrice.pow(2).log(PIECES).toDP(0, Decimal.ROUND_HALF_UP).toNumber();\n}\n\n/**\n * Get the sqrt price by tick\n * @param tick the tick\n * @returns the sqrt price\n */\nexport function tick2SqrtPrice(tick: number): Decimal {\n  invariant(\n    tick >= MIN_TICK && tick <= MAX_TICK,\n    `Invalid tick: ${tick}, must be in range [${MIN_TICK}, ${MAX_TICK}]`\n  );\n  return PIECES.pow(tick / 2);\n}\n\n/**\n * Get the tick by price\n * @param price the price\n * @returns the tick\n */\nexport function price2Tick(price: Decimal): number {\n  invariant(\n    price.lessThan(MAX_PRICE),\n    `Invalid price:${price.toString()} Max: ${MAX_PRICE.toString()},  too large`\n  );\n  invariant(\n    price.greaterThan(MIN_PRICE),\n    `Invalid price:${price.toString()} Min: ${MIN_PRICE.toString()}, too small`\n  );\n  return price.log(PIECES).toDP(0, Decimal.ROUND_HALF_UP).toNumber();\n}\n\n/**\n * Get the price by tick\n * @param tick the tick\n * @returns the price\n */\nexport function tick2Price(tick: number): Decimal {\n  invariant(\n    tick >= MIN_TICK && tick <= MAX_TICK,\n    `Invalid tick: ${tick}, must be in range [${MIN_TICK.toString()}, ${MAX_TICK.toString()}]`\n  );\n  return PIECES.pow(tick);\n}\n\n/**\n * Get the nearest valid tick\n * @deprecated please use {@link getNearestTickBySqrtPrice Or getNearestTickByPrice} instead\n * @param sqrtPrice the sqrt price\n * @param tickSpace the tick space\n * @param isLower is the tick is lowwer\n * @returns the tick or null\n */\nexport function getNearestTick(\n  sqrtPrice: Decimal,\n  tickSpace: number\n): number | null {\n  return getNearestTickBySqrtPrice(sqrtPrice, tickSpace);\n}\n\n/**\n * Get the nearest valid tick for positions\n * @param sqrtPrice the sqrt price\n * @param tickSpace the tick space\n * @returns the tick or null(if the tick space <= 0)\n */\nexport function getNearestTickBySqrtPrice(\n  sqrtPrice: Decimal,\n  tickSpace: number\n): number {\n  invariant(\n    tickSpace > 0 && tickSpace % 1 === 0,\n    `Invalid tickSpace:${tickSpace}`\n  );\n  invariant(\n    sqrtPrice.lessThan(MAX_SQRT_PRICE),\n    `Invalid sqrtPrice: ${sqrtPrice.toString()} Max: ${MAX_SQRT_PRICE.toString()}, too large`\n  );\n  invariant(\n    sqrtPrice.greaterThan(MIN_SQRT_PRICE),\n    `Invalid sqrtPrice: ${sqrtPrice.toString()}, Min: ${MIN_SQRT_PRICE.toString()}, too small`\n  );\n  const t = sqrtPrice2Tick(sqrtPrice);\n  const m = (t - MIN_TICK) % tickSpace;\n  if (m > tickSpace / 2) {\n    return t - m + tickSpace;\n  }\n  return t - m;\n}\n\n/**\n * Get the nearest valid tick for positions\n * @param price the price\n * @param tickSpace the tick space\n * @returns the tick or null(if the tick space <= 0)\n */\nexport function getNearestTickByPrice(\n  price: Decimal,\n  tickSpace: number\n): number {\n  invariant(\n    tickSpace > 0 && tickSpace % 1 === 0,\n    `Invalid tickSpace:${tickSpace}`\n  );\n  invariant(\n    price.lessThan(MAX_PRICE),\n    `Invalid price:${price.toString()} Max: ${MAX_PRICE.toString()},  too large`\n  );\n  invariant(\n    price.greaterThan(MIN_PRICE),\n    `Invalid price:${price.toString()} Min: ${MIN_PRICE.toString()}, too small`\n  );\n  const t = price2Tick(price);\n  const m = (t - MIN_TICK) % tickSpace;\n  if (m > tickSpace / 2) {\n    return t - m + tickSpace;\n  }\n  return t - m;\n}\n\n/**\n *\n * @param ticks The tick array of token swap\n * @param currentSqrtPrice The current sqrt price of token swap\n * @param fee The fee rate of token swap\n * @param currentLiquity The current liquity of token swap\n * @param amountIn The amount in of token A\n * @returns amountOut:The amount out of token B, amountUsed:The used of amountIn, afterPrice:The price after calculate, afterLiquity: The liquity after calculate\n */\nexport function calculateSwapA2B(\n  ticks: Tick[],\n  currentSqrtPrice: Decimal,\n  fee: Decimal,\n  currentLiquity: Decimal,\n  amountIn: Decimal\n): {\n  amountOut: Decimal;\n  amountUsed: Decimal;\n  feeUsed: Decimal;\n  afterPrice: Decimal;\n  afterLiquity: Decimal;\n} {\n  invariant(amountIn.greaterThan(new Decimal(0)), \"invalid amount in\");\n  invariant(\n    currentLiquity.greaterThanOrEqualTo(new Decimal(0)),\n    \"invalid liquity\"\n  );\n  invariant(ticks.length > 0, \"the ticks is empty\");\n  //let currentTick = sqrtPrice2Tick(currentSqrtPrice);\n  invariant(currentSqrtPrice > ticks[0].tickPrice, \"out of ticks\");\n  let liquity = currentLiquity;\n  let out = new Decimal(0);\n  let remind = amountIn;\n  let remindWithFee = new Decimal(0);\n  let feeUsed = new Decimal(0);\n  let amountUsed = new Decimal(0);\n  for (let i = ticks.length - 1; i >= 0; i--) {\n    if (liquity.equals(new Decimal(0))) {\n      currentSqrtPrice = ticks[i].tickPrice.sub(PRICE_OFFSET);\n      liquity = liquity.sub(ticks[i].liquityNet);\n      //upperSqrtPrice = ticks[i].tickPrice;\n      continue;\n    }\n    if (currentSqrtPrice < ticks[i].tickPrice) {\n      continue;\n    }\n    const upperSqrtPrice = currentSqrtPrice;\n    const lowerSqrtPrice = ticks[i].tickPrice;\n    const maxAmountIn = maxAmountA(lowerSqrtPrice, currentSqrtPrice, liquity);\n    const fullStepFee = maxAmountIn.mul(fee).toDP(0, Decimal.ROUND_DOWN);\n    if (remind.lessThan(fullStepFee)) {\n      remindWithFee = remind;\n    } else {\n      remindWithFee = remind.sub(fullStepFee);\n    }\n\n    if (maxAmountIn.greaterThanOrEqualTo(remindWithFee)) {\n      remindWithFee = remind\n        .mul(new Decimal(1).sub(fee))\n        .toDP(0, Decimal.ROUND_UP);\n      const { amountOut, afterSqrtPrice } = swapA2B(\n        upperSqrtPrice,\n        liquity,\n        remindWithFee\n      );\n      amountUsed = amountUsed.add(remind);\n      feeUsed = feeUsed.add(remind.sub(remindWithFee));\n      return {\n        amountOut: out.add(amountOut),\n        amountUsed,\n        feeUsed,\n        afterPrice: afterSqrtPrice,\n        afterLiquity: liquity,\n      };\n    } else {\n      remind = remindWithFee.sub(maxAmountIn);\n      amountUsed = amountUsed.add(maxAmountIn).add(fullStepFee);\n      feeUsed = feeUsed.add(fullStepFee);\n      out = out.add(maxAmountB(lowerSqrtPrice, upperSqrtPrice, liquity));\n      liquity = liquity.sub(ticks[i].liquityNet);\n      currentSqrtPrice = ticks[i].tickPrice.sub(PRICE_OFFSET);\n      //upperSqrtPrice = ticks[i].tickPrice;\n    }\n  }\n  return {\n    amountOut: out,\n    amountUsed,\n    feeUsed,\n    afterPrice: currentSqrtPrice,\n    afterLiquity: liquity,\n  };\n}\n\n/**\n *\n * @param ticks The tick array of token swap\n * @param currentSqrtPrice The current sqrt price of token swap\n * @param fee The fee rate of token swap\n * @param currentLiquity The current liquity of token swap\n * @param amountIn The amount in of token B\n * @returns amountOut:The amount out of token B, amountUsed:The used of amountIn, afterPrice:The price after calculate, afterLiquity: The liquity after calculate\n */\nexport function calculateSwapB2A(\n  ticks: Tick[],\n  currentSqrtPrice: Decimal,\n  fee: Decimal,\n  currentLiquity: Decimal,\n  amountIn: Decimal\n): {\n  amountOut: Decimal;\n  amountUsed: Decimal;\n  feeUsed: Decimal;\n  afterPrice: Decimal;\n  afterLiquity: Decimal;\n} {\n  invariant(amountIn.greaterThan(new Decimal(0)), \"invalid amount in\");\n  invariant(\n    currentLiquity.greaterThanOrEqualTo(new Decimal(0)),\n    \"invalid liquity\"\n  );\n  invariant(ticks.length > 0, \"the ticks is empty\");\n  //let currentTick = sqrtPrice2Tick(currentSqrtPrice);\n  invariant(\n    currentSqrtPrice.lessThan(ticks[ticks.length - 1].tickPrice),\n    \"out of ticks\"\n  );\n  let liquity = currentLiquity;\n  let out = new Decimal(0);\n  let remind = amountIn;\n  let remindWithFee = new Decimal(0);\n  let amountUsed = new Decimal(0);\n  let feeUsed = new Decimal(0);\n  for (let i = 0; i < ticks.length; i++) {\n    if (liquity.equals(new Decimal(0))) {\n      currentSqrtPrice = ticks[i].tickPrice.add(PRICE_OFFSET);\n      liquity = liquity.add(ticks[i].liquityNet);\n      continue;\n    }\n    if (currentSqrtPrice > ticks[i].tickPrice) {\n      continue;\n    }\n    const upperSqrtPrice = ticks[i].tickPrice;\n    const maxAmountIn = maxAmountB(currentSqrtPrice, upperSqrtPrice, liquity);\n    const fullStepFee = maxAmountIn.mul(fee).toDP(0, Decimal.ROUND_DOWN);\n    if (remind.lessThan(fullStepFee)) {\n      remindWithFee = remind;\n    } else {\n      remindWithFee = remind.sub(fullStepFee);\n    }\n    if (maxAmountIn.greaterThanOrEqualTo(remindWithFee)) {\n      remindWithFee = remind\n        .mul(new Decimal(1).sub(fee))\n        .toDP(0, Decimal.ROUND_UP);\n      const { amountOut, afterSqrtPrice } = swapB2A(\n        currentSqrtPrice,\n        liquity,\n        remindWithFee\n      );\n      amountUsed = amountUsed.add(remind);\n      feeUsed = feeUsed.add(remind.sub(remindWithFee));\n      return {\n        amountOut: out.add(amountOut),\n        feeUsed,\n        amountUsed,\n        afterPrice: afterSqrtPrice.pow(2),\n        afterLiquity: liquity,\n      };\n    } else {\n      remind = remindWithFee.sub(maxAmountIn);\n      amountUsed = amountUsed.add(maxAmountIn).add(fullStepFee);\n      feeUsed = feeUsed.add(fullStepFee);\n      out = out.add(maxAmountA(currentSqrtPrice, upperSqrtPrice, liquity));\n      liquity = liquity.add(ticks[i].liquityNet);\n      currentSqrtPrice = ticks[i].tickPrice.add(PRICE_OFFSET);\n    }\n  }\n  return {\n    amountOut: out,\n    amountUsed,\n    feeUsed,\n    afterPrice: currentSqrtPrice,\n    afterLiquity: liquity,\n  };\n}\n\n/** @internal */\nexport function maxAmountA(\n  lowerSqrtPrice: Decimal,\n  upperSqrtPrice: Decimal,\n  liquity: Decimal\n): Decimal {\n  return liquity\n    .div(lowerSqrtPrice)\n    .toDP(0, Decimal.ROUND_DOWN)\n    .sub(liquity.div(upperSqrtPrice).toDP(0, Decimal.ROUND_DOWN));\n}\n\n/** @internal */\nexport function maxAmountB(\n  lowerSqrtPrice: Decimal,\n  upperSqrtPrice: Decimal,\n  liquity: Decimal\n): Decimal {\n  return liquity\n    .mul(upperSqrtPrice.sub(lowerSqrtPrice))\n    .toDP(0, Decimal.ROUND_DOWN);\n}\n\n/** @internal */\nexport function swapA2B(\n  upperSqrtPrice: Decimal,\n  liquity: Decimal,\n  amountIn: Decimal\n): { amountOut: Decimal; afterSqrtPrice: Decimal } {\n  const afterSqrtPrice = liquity.div(amountIn.add(liquity.div(upperSqrtPrice)));\n  const delta_increase = amountIn.add(\n    liquity.div(upperSqrtPrice).toDP(0, Decimal.ROUND_DOWN)\n  );\n  const out = liquity\n    .mul(upperSqrtPrice)\n    .toDP(0, Decimal.ROUND_DOWN)\n    .sub(liquity.mul(liquity).div(delta_increase).toDP(0, Decimal.ROUND_DOWN));\n  return { amountOut: out, afterSqrtPrice };\n}\n\n/** @internal */\nexport function swapB2A(\n  lowerSqrtPrice: Decimal,\n  liquity: Decimal,\n  amountIn: Decimal\n): { amountOut: Decimal; afterSqrtPrice: Decimal } {\n  const afterSqrtPrice = amountIn.div(liquity).add(lowerSqrtPrice);\n  const delta_increase = amountIn.add(\n    liquity.mul(lowerSqrtPrice).toDP(0, Decimal.ROUND_DOWN)\n  );\n  const out = liquity\n    .div(lowerSqrtPrice)\n    .toDP(0, Decimal.ROUND_DOWN)\n    .sub(liquity.mul(liquity).div(delta_increase).toDP(0, Decimal.ROUND_DOWN));\n  return { amountOut: out, afterSqrtPrice };\n}\n","import BN from \"bn.js\";\nimport Decimal from \"decimal.js\";\nimport invariant from \"tiny-invariant\";\n\nDecimal.config({\n  precision: 64,\n  rounding: Decimal.ROUND_DOWN,\n  toExpNeg: -64,\n  toExpPos: 64,\n});\n\nconst TEN = new Decimal(10);\nconst P64 = new Decimal(2).pow(64);\nconst MAX_INT64 = P64.div(2).sub(1);\nconst MIN_INT64 = P64.div(2).neg();\nconst MAX_UINT64 = P64.sub(1);\nconst MAX_INT128 = P64.pow(63).sub(1);\nconst MIN_INT128 = MAX_INT128.neg();\nconst MAX_UINT128 = P64.pow(64).sub(1);\nconst MAX_PRECISION = 40;\n\nexport class DecimalExt {\n  /**\n   * New a Decimal from a int64 buffer\n   * @param buffer The buffer\n   * @param precision The pricision\n   * @returns The Decimal value, the result will be div 10^precision\n   */\n  static from64Buffer(buffer: Buffer, precision = 0): Decimal {\n    invariant(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    console.log(buffer);\n\n    if (buffer[7] >= 0x80) {\n      const ss = [];\n      for (const v of buffer) {\n        ss.push(`00${Math.abs(~v & 0xff).toString(16)}`.slice(-2));\n      }\n      const bn = new BN(ss.join(\"\"), 16, \"le\").add(new BN(1)).neg();\n      return new Decimal(bn.toString()).div(TEN.pow(precision));\n    }\n    return new Decimal(new BN(buffer, \"le\").toString()).div(TEN.pow(precision));\n  }\n\n  /**\n   * New a Decimal from a uint64 buffer\n   * @param buffer The buffer\n   * @param precision The precision\n   * @returns The Decimal value, the result will be div 10^precision\n   */\n  static fromU64Buffer(buffer: Buffer, precision = 0): Decimal {\n    invariant(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    return new Decimal(new BN(buffer, 16, \"le\").toString()).div(\n      TEN.pow(precision)\n    );\n  }\n\n  /**\n   * New a Decimal from a int128 buffer\n   * @param buffer The buffer\n   * @param precision The pricision\n   * @returns The Decimal value, the result will be div 10^precision\n   */\n  static from128Buffer(buffer: Buffer, precision = 0): Decimal {\n    invariant(buffer.length === 16, `Invalid buffer length: ${buffer.length}`);\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n\n    if (buffer[15] >= 0x80) {\n      const ss = [];\n      for (const v of buffer) {\n        ss.push(`00${Math.abs(~v & 0xff).toString(16)}`.slice(-2));\n      }\n      const bn = new BN(ss.join(\"\"), 16, \"le\").add(new BN(1)).neg();\n      return new Decimal(bn.toString()).div(TEN.pow(precision));\n    }\n    return new Decimal(new BN(buffer, \"le\").toString()).div(TEN.pow(precision));\n  }\n\n  /**\n   * New a Decimal from a uint128 buffer\n   * @param buffer The buffer\n   * @param precision The precision\n   * @returns The Decimal value, the result will be div 10^precision\n   */\n  static fromU128Buffer(buffer: Buffer, precision = 0): Decimal {\n    invariant(buffer.length === 16, `Invalid buffer length: ${buffer.length}`);\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    return new Decimal(new BN(buffer, \"le\").toString()).div(TEN.pow(precision));\n  }\n\n  /**\n   * Convert a Decimal value to int64 buffer\n   * @param v The Decimal value\n   * @param precision The precision\n   * @returns The buffer, the result will be mul 10^precision\n   */\n  static to64Buffer(v: Decimal, precision = 0): Buffer {\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    v = v.mul(TEN.pow(precision)).round();\n    invariant(\n      v.greaterThanOrEqualTo(MIN_INT64) && v.lessThanOrEqualTo(MAX_INT64),\n      `Invalid v: ${v.toString()} to int128 buffer with precision: ${precision}`\n    );\n    const bn = new BN(v.toString());\n    if (bn.isNeg()) {\n      const buffer = bn.add(new BN(1)).toBuffer(\"le\", 8);\n      buffer.forEach(function (item, index, input) {\n        input[index] = ~item & 0xff;\n      });\n      return buffer;\n    } else {\n      return bn.toBuffer(\"le\", 8);\n    }\n  }\n\n  /**\n   * Convert a Decimal value to uint64 buffer\n   * @param v The Decimal value\n   * @param precision The precision\n   * @returns The buffer, the result will be mul 10^precision\n   */\n  static toU64Buffer(v: Decimal, precision = 0): Buffer {\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    v = v.mul(TEN.pow(precision)).round();\n    invariant(\n      v.greaterThanOrEqualTo(0) && v.lessThanOrEqualTo(MAX_UINT64),\n      `Invalid v: ${v.toString()} to uint64 buffer with precision: ${precision}`\n    );\n    return new BN(v.toString()).toBuffer(\"le\", 8);\n  }\n\n  /**\n   * Convert a Decimal value to int128 buffer\n   * @param v The Decimal value\n   * @param precision The precision\n   * @returns The buffer, the result will be mul 10^precision\n   */\n  static to128Buffer(v: Decimal, precision = 0): Buffer {\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    v = v.mul(TEN.pow(precision)).round();\n    invariant(\n      v.greaterThanOrEqualTo(MIN_INT128) && v.lessThanOrEqualTo(MAX_INT128),\n      `Invalid v: ${v.toString()} to int128 buffer with precision: ${precision}`\n    );\n    const bn = new BN(v.toString());\n    if (bn.isNeg()) {\n      const buffer = bn.add(new BN(1)).toBuffer(\"le\", 16);\n      buffer.forEach(function (item, index, input) {\n        input[index] = ~item & 0xff;\n      });\n      return buffer;\n    } else {\n      return bn.toBuffer(\"le\", 16);\n    }\n  }\n\n  /**\n   * Convert a Decimal value to uint128 buffer\n   * @param v The Decimal value\n   * @param precision The precision\n   * @returns The buffer, the result will be mul 10^precision\n   */\n  static toU128Buffer(v: Decimal, precision = 0): Buffer {\n    invariant(\n      Math.abs(precision) < MAX_PRECISION,\n      `Invalid precision: ${precision}`\n    );\n    v = v.mul(TEN.pow(precision)).round();\n    invariant(\n      v.greaterThanOrEqualTo(0) && v.lessThanOrEqualTo(MAX_UINT128),\n      `Invalid v: ${v.toString()} to int128 buffer with precision: ${precision}`\n    );\n    return new BN(v.toString()).toBuffer(\"le\", 16);\n  }\n}\n","import type { Blob, Layout } from \"@solana/buffer-layout\";\nimport { blob } from \"@solana/buffer-layout\";\nimport type { AccountInfo } from \"@solana/web3.js\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport { DecimalExt } from \"./decimalExt\";\n\nexport type Parser<T> = (\n  pubkey: PublicKey,\n  info: AccountInfo<Buffer>\n) =>\n  | {\n      pubkey: PublicKey;\n      info: AccountInfo<Buffer>;\n      data: T;\n    }\n  | undefined;\n\n/** @internal */\nexport interface EncodeDecode<T> {\n  decode: (buffer: Buffer, offset?: number) => T;\n  encode: (src: T, buffer: Buffer, offset?: number) => number;\n}\n\n/** @internal */\nexport const encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return { decode, encode };\n};\n\nexport const publicKey = (property = \"publicKey\"): Layout<PublicKey> => {\n  const layout = blob(32, property);\n  const { encode, decode } = encodeDecode(layout);\n\n  const publicKeyLayout = layout as Layout<unknown> as Layout<PublicKey>;\n\n  publicKeyLayout.decode = (buffer: Buffer, offset: number) => {\n    const src = decode(buffer, offset);\n    return new PublicKey(src);\n  };\n\n  publicKeyLayout.encode = (\n    publicKey: PublicKey,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = publicKey.toBuffer();\n    return encode(src, buffer, offset);\n  };\n\n  return publicKeyLayout;\n};\n\nexport const uint64 = (property = \"uint128\"): Blob => {\n  return blob(8, property);\n};\n\nexport const int64 = (property = \"uint128\"): Blob => {\n  return blob(8, property);\n};\n\nexport const int128 = (property = \"uint128\"): Blob => {\n  return blob(16, property);\n};\n\nexport const uint128 = (property = \"uint128\"): Blob => {\n  return blob(16, property);\n};\n\nexport const decimal64 = (\n  property = \"uint64\",\n  precision = 0\n): Layout<Decimal> => {\n  const layout = blob(8, property);\n  //const { encode, decode } = encodeDecode(layout);\n  const decimal64Layout = layout as Layout<unknown> as Layout<Decimal>;\n\n  const _decode = layout.decode.bind(layout);\n  const _encode = layout.encode.bind(layout);\n\n  decimal64Layout.decode = (buffer: Buffer, offset: number) => {\n    const src = Buffer.from(_decode(buffer, offset));\n    return DecimalExt.from64Buffer(src, precision);\n  };\n\n  decimal64Layout.encode = (\n    decimal: Decimal,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = DecimalExt.to64Buffer(decimal, precision);\n    return _encode(src, buffer, offset);\n  };\n\n  return decimal64Layout;\n};\n\nexport const decimalU64 = (\n  property = \"uint64\",\n  precision = 0\n): Layout<Decimal> => {\n  const layout = blob(8, property);\n  //const { encode, decode } = encodeDecode(layout)\n  const _decode = layout.decode.bind(layout);\n  const _encode = layout.encode.bind(layout);\n  const decimalU64Layout = layout as Layout<unknown> as Layout<Decimal>;\n\n  decimalU64Layout.decode = (buffer: Buffer, offset: number) => {\n    const src = Buffer.from(_decode(buffer, offset));\n    return DecimalExt.fromU64Buffer(src, precision);\n  };\n\n  decimalU64Layout.encode = (\n    decimal: Decimal,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = DecimalExt.toU64Buffer(decimal, precision);\n    return _encode(src, buffer, offset);\n  };\n\n  return decimalU64Layout;\n};\n\nexport const decimal128 = (\n  property = \"uint64\",\n  precision = 0\n): Layout<Decimal> => {\n  const layout = blob(16, property);\n  //const { encode, decode } = encodeDecode(layout);\n  const _decode = layout.decode.bind(layout);\n  const _encode = layout.encode.bind(layout);\n  const decimal128Layout = layout as Layout<unknown> as Layout<Decimal>;\n\n  decimal128Layout.decode = (buffer: Buffer, offset: number) => {\n    const src = Buffer.from(_decode(buffer, offset));\n    return DecimalExt.from128Buffer(src, precision);\n  };\n\n  decimal128Layout.encode = (\n    decimal: Decimal,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = DecimalExt.to128Buffer(decimal, precision);\n    return _encode(src, buffer, offset);\n  };\n\n  return decimal128Layout;\n};\n\nexport const decimalU128 = (\n  property = \"uint64\",\n  precision = 0\n): Layout<Decimal> => {\n  const layout = blob(16, property);\n  //const { encode, decode } = encodeDecode(layout);\n  const _decode = layout.decode.bind(layout);\n  const _encode = layout.encode.bind(layout);\n  const decimalU128Layout = layout as Layout<unknown> as Layout<Decimal>;\n\n  decimalU128Layout.decode = (buffer: Buffer, offset: number) => {\n    const src = Buffer.from(_decode(buffer, offset));\n    const val = DecimalExt.fromU128Buffer(src, precision);\n    return val;\n  };\n\n  decimalU128Layout.encode = (\n    decimal: Decimal,\n    buffer: Buffer,\n    offset: number\n  ) => {\n    const src = DecimalExt.toU128Buffer(decimal, precision);\n    return _encode(src, buffer, offset);\n  };\n\n  return decimalU128Layout;\n};\n","import { blob, s32, seq, struct, u8 } from \"@solana/buffer-layout\";\nimport type { AccountInfo, PublicKey } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport type { Parser } from \"../util/layout\";\nimport { decimalU128, publicKey } from \"../util/layout\";\n\nexport const POSITIONS_ACCOUNT_SIZE = 360000;\nexport const POSITIONS_ACCOUNT_TYPE = 2;\n\nexport interface Position {\n  nftTokenId: PublicKey;\n  lowerTick: number;\n  upperTick: number;\n  liquity: Decimal;\n  feeGrowthInsideALast: Decimal;\n  feeGrowthInsideBLast: Decimal;\n  tokenAFee: Decimal;\n  tokenBFee: Decimal;\n}\n\nexport interface PositionsAccount {\n  swapVersion: number;\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  len: number;\n  positions: Position[];\n}\n\n/* @internal */\nexport interface PositionsAccountDataFlat {\n  swapVersion: number;\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  len: number;\n  dataFlat: Uint8Array;\n}\n\nexport const PositionLayout = struct<Position>(\n  [\n    publicKey(\"nftTokenId\"),\n    s32(\"lowerTick\"),\n    s32(\"upperTick\"),\n    decimalU128(\"liquity\"),\n    decimalU128(\"feeGrowthInsideALast\", 16),\n    decimalU128(\"feeGrowthInsideBLast\", 16),\n    decimalU128(\"tokenAFee\", 16),\n    decimalU128(\"tokenBFee\", 16),\n  ],\n  \"position\"\n);\n\nexport const PositionsAccountLayout = struct<PositionsAccountDataFlat>(\n  [\n    u8(\"swapVersion\"),\n    publicKey(\"tokenSwapKey\"),\n    u8(\"accountType\"),\n    s32(\"len\"),\n    blob(POSITIONS_ACCOUNT_SIZE - 38, \"dataFlat\"),\n  ],\n  \"positionsAccount\"\n);\n\nexport const MAX_ACCOUNT_POSITION_LENGTH = Math.floor(\n  (POSITIONS_ACCOUNT_SIZE - 38) / PositionLayout.span\n);\n\nexport const isPositionsAccount = (info: AccountInfo<Buffer>): boolean => {\n  return info.data.readUInt8(33) === POSITIONS_ACCOUNT_TYPE;\n};\n\nexport const parsePositionsAccount: Parser<PositionsAccount> = (\n  pubkey: PublicKey,\n  info: AccountInfo<Buffer>\n) => {\n  if (!isPositionsAccount(info)) return;\n\n  const buffer = Buffer.from(info.data);\n  const { swapVersion, tokenSwapKey, accountType, len, dataFlat } =\n    PositionsAccountLayout.decode(buffer);\n\n  const positionSpan = len * PositionLayout.span;\n  const positionsBuffer = dataFlat.slice(0, positionSpan);\n  const positions = seq(PositionLayout, len).decode(positionsBuffer);\n\n  const positionsAccount: PositionsAccount = {\n    swapVersion,\n    tokenSwapKey,\n    accountType,\n    len,\n    positions,\n  };\n\n  return {\n    pubkey,\n    info,\n    data: positionsAccount,\n  };\n};\n","import { blob, s32, seq, struct, u8 } from \"@solana/buffer-layout\";\nimport type { AccountInfo, PublicKey } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport type { Parser } from \"../util/layout\";\nimport { decimal128, decimalU128, publicKey } from \"../util/layout\";\n\nexport const TICKS_ACCOUNT_SIZE = 504000;\nexport const TICKS_ACCOUNT_TYPE = 1;\n\nexport interface Tick {\n  tick: number;\n  tickPrice: Decimal;\n  liquityGross: Decimal;\n  liquityNet: Decimal;\n  feeGrowthOutside0: Decimal;\n  feeGrowthOutside1: Decimal;\n}\n\nexport interface TicksAccount {\n  swapVersion: number;\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  len: number;\n  ticks: Tick[];\n}\n\n/* @internal */\nexport interface TicksAccountDataFlat {\n  swapVersion: number;\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  len: number;\n  dataFlat: Uint8Array;\n}\n\nexport const TickLayout = struct<Tick>(\n  [\n    s32(\"tick\"),\n    decimalU128(\"tickPrice\", 12),\n    decimalU128(\"liquityGross\"),\n    decimal128(\"liquityNet\"),\n    decimalU128(\"feeGrowthOutside0\", 16),\n    decimalU128(\"feeGrowthOutside1\", 16),\n  ],\n  \"tickInfo\"\n);\n\nexport const isTicksAccount = (info: AccountInfo<Buffer>): boolean => {\n  return info.data.readUInt8(33) === TICKS_ACCOUNT_TYPE;\n};\n\nexport const parseTicksAccount: Parser<TicksAccount> = (\n  pubkey: PublicKey,\n  info: AccountInfo<Buffer>\n) => {\n  if (!isTicksAccount(info)) return;\n\n  const Layout = struct<TicksAccountDataFlat>(\n    [\n      u8(\"swapVersion\"),\n      publicKey(\"tokenSwapKey\"),\n      u8(\"accountType\"),\n      s32(\"len\"),\n      blob(info.data.length - 38, \"dataFlat\"),\n    ],\n    \"ticksAccount\"\n  );\n\n  const buffer = Buffer.from(info.data);\n  const { swapVersion, tokenSwapKey, accountType, len, dataFlat } =\n    Layout.decode(buffer);\n\n  const tickSpan = len * TickLayout.span;\n  const ticksBuffer = dataFlat.slice(0, tickSpan);\n  const ticks = seq(TickLayout, len).decode(ticksBuffer);\n\n  const ticksAccount: TicksAccount = {\n    swapVersion,\n    tokenSwapKey,\n    accountType,\n    len,\n    ticks,\n  };\n\n  return {\n    pubkey,\n    info,\n    data: ticksAccount,\n  };\n};\n","import { struct, u8, u32 } from \"@solana/buffer-layout\";\nimport type { AccountInfo, PublicKey } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport type { Parser } from \"../util/layout\";\nimport { decimalU64, decimalU128, publicKey } from \"../util/layout\";\n\nexport const TOKEN_SWAP_ACCOUNT_TYPE = 0;\n\nexport interface TokenSwapAccount {\n  version: number;\n  tokenSwapKey: PublicKey;\n  accountType: number;\n  isInitialized: number;\n  nonce: number;\n  tokenProgramId: PublicKey;\n  manager: PublicKey;\n  managerTokenA: PublicKey;\n  managerTokenB: PublicKey;\n  swapTokenA: PublicKey;\n  swapTokenB: PublicKey;\n  tokenAMint: PublicKey;\n  tokenBMint: PublicKey;\n  ticksKey: PublicKey;\n  positionsKey: PublicKey;\n  curveType: number;\n  fee: Decimal;\n  managerFee: Decimal;\n  tickSpace: number;\n  currentSqrtPrice: Decimal;\n  currentLiquity: Decimal;\n  feeGrowthGlobal0: Decimal;\n  feeGrowthGlobal1: Decimal;\n  managerFeeA: Decimal;\n  managerFeeB: Decimal;\n}\n\nexport const TokenSwapAccountLayout = struct<TokenSwapAccount>(\n  [\n    u8(\"version\"),\n    publicKey(\"tokenSwapKey\"),\n    u8(\"accountType\"),\n    u8(\"isInitialized\"),\n    u8(\"nonce\"),\n    publicKey(\"tokenProgramId\"),\n    publicKey(\"manager\"),\n    publicKey(\"managerTokenA\"),\n    publicKey(\"managerTokenB\"),\n    publicKey(\"swapTokenA\"),\n    publicKey(\"swapTokenB\"),\n    publicKey(\"tokenAMint\"),\n    publicKey(\"tokenBMint\"),\n    publicKey(\"ticksKey\"),\n    publicKey(\"positionsKey\"),\n    u8(\"curveType\"),\n    decimalU64(\"fee\", 12),\n    decimalU64(\"managerFee\", 12),\n    u32(\"tickSpace\"),\n    decimalU128(\"currentSqrtPrice\", 12),\n    decimalU128(\"currentLiquity\"),\n    decimalU128(\"feeGrowthGlobal0\", 16),\n    decimalU128(\"feeGrowthGlobal1\", 16),\n    decimalU128(\"managerFeeA\"),\n    decimalU128(\"managerFeeB\"),\n  ],\n  \"tokenSwapAccount\"\n);\n\nexport const TOKEN_SWAP_ACCOUNT_SIZE = TokenSwapAccountLayout.span;\n\nexport const isTokenSwapAccount = (info: AccountInfo<Buffer>): boolean => {\n  return info.data.readUInt8(33) === TOKEN_SWAP_ACCOUNT_TYPE;\n};\n\nexport const parseTokenSwapAccount: Parser<TokenSwapAccount> = (\n  pubkey: PublicKey,\n  info: AccountInfo<Buffer>\n) => {\n  if (!isTokenSwapAccount(info)) {\n    return;\n  }\n\n  const buffer = Buffer.from(info.data);\n  const tokenSwapAccount = TokenSwapAccountLayout.decode(buffer);\n\n  return {\n    pubkey,\n    info,\n    data: tokenSwapAccount,\n  };\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/** @internal */\nexport enum TokenSwapInstruction {\n  Initialize = 0,\n  Swap = 1,\n  DepositAllTokenTypes = 2,\n  WithdrawAllTokenTypes = 3,\n  Claim = 4,\n  ManagerClaim = 5,\n  AddUserPosition = 6,\n  UpdateFee = 7,\n  SimulateSwap = 8,\n}\n","import { struct, u8 } from \"@solana/buffer-layout\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\n\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n}\n\nconst DataLayout = struct<Data>([u8(\"instruction\")]);\n\nexport const addUserPositionInstruction = (\n  programId: PublicKey,\n  authority: PublicKey,\n  positionsKey: PublicKey\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.AddUserPosition,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: programId, isSigner: false, isWritable: false },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { struct, u8 } from \"@solana/buffer-layout\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport { decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  positionIndex: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  decimalU64(\"positionIndex\"),\n]);\n\nexport const claimInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  userTokenA: PublicKey,\n  userTokenB: PublicKey,\n  nftMint: PublicKey,\n  nftUser: PublicKey,\n  ticksKey: PublicKey,\n  positionsKey: PublicKey,\n  positionIndex: Decimal\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.Claim,\n      positionIndex,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: false },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: nftMint, isSigner: false, isWritable: false },\n    { pubkey: nftUser, isSigner: false, isWritable: false },\n    { pubkey: swapTokenA, isSigner: false, isWritable: true },\n    { pubkey: swapTokenB, isSigner: false, isWritable: true },\n    { pubkey: userTokenA, isSigner: false, isWritable: true },\n    { pubkey: userTokenB, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: false },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { s32, struct, u8 } from \"@solana/buffer-layout\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport { decimalU64, decimalU128 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  isNewPosition: number;\n  liquityAmount: Decimal;\n  tickLower: number;\n  tickUpper: number;\n  maximumTokenA: Decimal;\n  maximumTokenB: Decimal;\n  positionIndex: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  u8(\"isNewPosition\"),\n  decimalU128(\"liquityAmount\"),\n  s32(\"tickLower\"),\n  s32(\"tickUpper\"),\n  decimalU64(\"maximumTokenA\"),\n  decimalU64(\"maximumTokenB\"),\n  decimalU64(\"positionIndex\"),\n]);\n\nexport const depositAllTokenTypesInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  userTokenA: PublicKey,\n  userTokenB: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  nftMint: PublicKey,\n  nftUser: PublicKey,\n  ticksKey: PublicKey,\n  positionsKey: PublicKey,\n  isNewPosition: number,\n  tickLower: number,\n  tickUpper: number,\n  liquityAmount: Decimal,\n  maximumTokenA: Decimal,\n  maximumTokenB: Decimal,\n  positionIndex: Decimal\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.DepositAllTokenTypes,\n      isNewPosition,\n      liquityAmount,\n      tickLower,\n      tickUpper,\n      maximumTokenA,\n      maximumTokenB,\n      positionIndex,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: userTokenA, isSigner: false, isWritable: true },\n    { pubkey: userTokenB, isSigner: false, isWritable: true },\n    { pubkey: swapTokenA, isSigner: false, isWritable: true },\n    { pubkey: swapTokenB, isSigner: false, isWritable: true },\n    { pubkey: nftMint, isSigner: false, isWritable: true },\n    { pubkey: nftUser, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { struct, u8, u32 } from \"@solana/buffer-layout\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\nimport Decimal from \"decimal.js\";\n\nimport { decimalU64, decimalU128 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  nonce: number;\n  curveType: number;\n  fee: Decimal;\n  managerFee: Decimal;\n  tickSpace: number;\n  currentSqrtPrice: Decimal;\n  currentLiquity: Decimal;\n  feeGrowthGlobal0: Decimal;\n  feeGrowthGlobal1: Decimal;\n  managerFeeA: Decimal;\n  managerFeeB: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  u8(\"nonce\"),\n  u8(\"curveType\"),\n  decimalU64(\"fee\", 12),\n  decimalU64(\"managerFee\", 12),\n  u32(\"tickSpace\"),\n  decimalU128(\"currentSqrtPrice\", 12),\n  decimalU128(\"currentLiquity\"),\n  decimalU128(\"feeGrowthGlobal0\"),\n  decimalU128(\"feeGrowthGlobal1\"),\n  decimalU128(\"managerFeeA\"),\n  decimalU128(\"managerFeeB\"),\n]);\n\nexport const initializeInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  manager: PublicKey,\n  managerTokenA: PublicKey,\n  managerTokenB: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  ticksKey: PublicKey,\n  positionsKey: PublicKey,\n  nonce: number,\n  curveType: number,\n  fee: Decimal,\n  managerFee: Decimal,\n  tickSpace: number,\n  currentSqrtPrice: Decimal\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.Initialize,\n      nonce,\n      curveType,\n      fee,\n      managerFee,\n      tickSpace,\n      currentSqrtPrice,\n      currentLiquity: new Decimal(0),\n      feeGrowthGlobal0: new Decimal(0),\n      feeGrowthGlobal1: new Decimal(0),\n      managerFeeA: new Decimal(0),\n      managerFeeB: new Decimal(0),\n    },\n    data\n  );\n\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: manager, isSigner: false, isWritable: false },\n    { pubkey: managerTokenA, isSigner: false, isWritable: false },\n    { pubkey: managerTokenB, isSigner: false, isWritable: false },\n    { pubkey: swapTokenA, isSigner: false, isWritable: false },\n    { pubkey: swapTokenB, isSigner: false, isWritable: false },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { struct, u8 } from \"@solana/buffer-layout\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\n\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n}\n\nconst DataLayout = struct<Data>([u8(\"instruction\")]);\n\nexport const managerClaimInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  userTokenA: PublicKey,\n  userTokenB: PublicKey\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.ManagerClaim,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: swapTokenA, isSigner: false, isWritable: true },\n    { pubkey: swapTokenB, isSigner: false, isWritable: true },\n    { pubkey: userTokenA, isSigner: false, isWritable: true },\n    { pubkey: userTokenB, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { struct, u8 } from \"@solana/buffer-layout\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport { decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  amountIn: Decimal;\n  // minimumAmountOut: Decimal,\n  direction: number;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  decimalU64(\"amountIn\"),\n  // decimalU64(\"minimumAmountOut\"),\n  u8(\"direction\"),\n]);\n\nexport const simulateSwapInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  ticksKey: PublicKey,\n  amountIn: Decimal,\n  // minimumAmountOut: Decimal,\n  direction: number\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.SimulateSwap,\n      amountIn,\n      // minimumAmountOut,\n      direction,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { struct, u8 } from \"@solana/buffer-layout\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport { decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  amountIn: Decimal;\n  minimumAmountOut: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  decimalU64(\"amountIn\"),\n  decimalU64(\"minimumAmountOut\"),\n]);\n\nexport const swapInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  userSource: PublicKey,\n  userDestination: PublicKey,\n  swapSource: PublicKey,\n  swapDestination: PublicKey,\n  ticksKey: PublicKey,\n  amountIn: Decimal,\n  minimumAmountOut: Decimal\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.Swap,\n      amountIn,\n      minimumAmountOut,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: userSource, isSigner: false, isWritable: true },\n    { pubkey: userDestination, isSigner: false, isWritable: true },\n    { pubkey: swapSource, isSigner: false, isWritable: true },\n    { pubkey: swapDestination, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","import { struct, u8 } from \"@solana/buffer-layout\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport { decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n  liquityAmount: Decimal;\n  minimumTokenA: Decimal;\n  minimumTokenB: Decimal;\n  positionIndex: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  decimalU64(\"liquityAmount\"),\n  decimalU64(\"minimumTokenA\"),\n  decimalU64(\"minimumTokenB\"),\n  decimalU64(\"positionIndex\"),\n]);\n\nexport const withdrawAllTokenTypesInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  userTokenA: PublicKey,\n  userTokenB: PublicKey,\n  nftMint: PublicKey,\n  nftUser: PublicKey,\n  ticksKey: PublicKey,\n  positionsKey: PublicKey,\n  liquityAmount: Decimal,\n  minimumTokenA: Decimal,\n  minimumTokenB: Decimal,\n  positionIndex: Decimal\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.WithdrawAllTokenTypes,\n      liquityAmount,\n      minimumTokenA,\n      minimumTokenB,\n      positionIndex,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: nftMint, isSigner: false, isWritable: true },\n    { pubkey: nftUser, isSigner: false, isWritable: true },\n    { pubkey: swapTokenA, isSigner: false, isWritable: true },\n    { pubkey: swapTokenB, isSigner: false, isWritable: true },\n    { pubkey: userTokenA, isSigner: false, isWritable: true },\n    { pubkey: userTokenB, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n","/* eslint-disable @typescript-eslint/restrict-plus-operands */\n// To connect to a public cluster, set `export LIVE=1` in your\n// environment. By default, `LIVE=1` will connect to the devnet cluster.\n\nimport type { Cluster } from \"@solana/web3.js\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport dotenv from \"dotenv\";\n\nfunction chooseCluster(): Cluster | undefined {\n  dotenv.config();\n  if (!process.env.LIVE) return;\n  switch (process.env.CLUSTER) {\n    case \"devnet\":\n    case \"testnet\":\n    case \"mainnet-beta\": {\n      return process.env.CLUSTER;\n    }\n  }\n  throw 'Unknown cluster \"' + process.env.CLUSTER + '\", check the .env file';\n}\n\nexport const cluster = chooseCluster();\n\nexport const url =\n  process.env.RPC_URL ||\n  (process.env.LIVE ? clusterApiUrl(cluster, false) : \"http://localhost:8899\");\n\nexport const urlTls =\n  process.env.RPC_URL ||\n  (process.env.LIVE ? clusterApiUrl(cluster, true) : \"http://localhost:8899\");\n\nexport const walletUrl =\n  process.env.WALLET_URL || \"https://solana-example-webwallet.herokuapp.com/\";\n","import type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from \"@solana/web3.js\";\nimport { sendAndConfirmTransaction as realSendAndConfirmTransaction } from \"@solana/web3.js\";\n\n/**\n * Send and confirm trnasaction with default option\n * @param conn The connection to use\n * @param transaction The transaction\n * @param signers The signers array\n * @returns\n */\nexport async function sendAndConfirmTransaction(\n  conn: Connection,\n  transaction: Transaction,\n  ...signers: Signer[]\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(conn, transaction, signers, {\n    skipPreflight: false,\n    commitment: \"recent\",\n    preflightCommitment: \"recent\",\n  });\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-return */\nimport type { AccountInfo } from \"@solana/spl-token\";\nimport {\n  AccountLayout,\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  Token,\n  TOKEN_PROGRAM_ID,\n  u64,\n} from \"@solana/spl-token\";\nimport type {\n  AccountInfo as BaseAccountInfo,\n  Connection,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport invariant from \"tiny-invariant\";\n\n/**\n * Get a authority token account address\n * @param tokenMint The mint of token\n * @param owner The owner associated token address\n * @returns\n */\nexport async function getAssociatedTokenAddress(\n  tokenMint: PublicKey,\n  owner: PublicKey\n): Promise<PublicKey> {\n  return await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    tokenMint,\n    owner,\n    true\n  );\n}\n\n/**\n * Get a create associated token account instruction\n * @param tokenMint The mint of token\n * @param owner The owner associated token address\n * @param authority The authority token account address\n * @param payer The pays for transaction\n * @returns\n */\nexport function createAssociatedTokenAccountInstruction(\n  tokenMint: PublicKey,\n  associatedAccount: PublicKey,\n  owner: PublicKey,\n  payer: PublicKey\n): TransactionInstruction {\n  return Token.createAssociatedTokenAccountInstruction(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    tokenMint,\n    associatedAccount,\n    owner,\n    payer\n  );\n}\n\n/**\n * Get the token account info by address\n * @param conn The connection to use\n * @param address The token account address\n * @returns\n */\nexport async function getTokenAccount(\n  conn: Connection,\n  address: PublicKey\n): Promise<AccountInfo> {\n  const account = await conn.getAccountInfo(address);\n  invariant(\n    account?.data !== null,\n    `The token account:${address.toBase58()} data is null`\n  );\n  invariant(account !== null, \"the account is null\");\n  const accountInfo = parseTokenAccount(account);\n  accountInfo.address = address;\n  return accountInfo;\n}\n\n/**\n * Get the token accounts by owner\n * @param conn The connection to use\n * @param owner The owner address\n * @returns The token accounts\n */\nexport async function getTokenAccounts(\n  conn: Connection,\n  owner: PublicKey\n): Promise<AccountInfo[]> {\n  const accounts = await conn.getTokenAccountsByOwner(owner, {\n    programId: TOKEN_PROGRAM_ID,\n  });\n  const accountInfos: AccountInfo[] = [];\n  for (let i = 0; i < accounts.value.length; i++) {\n    const { pubkey, account } = accounts.value[i];\n    invariant(\n      account?.data !== null,\n      `The token account:${pubkey.toBase58()} data is null`\n    );\n    const accountInfo = parseTokenAccount(account);\n    accountInfo.address = pubkey;\n    accountInfos.push(accountInfo);\n  }\n  return accountInfos;\n}\n\nexport function parseTokenAccountData(data: Buffer): AccountInfo {\n  const accountInfo = AccountLayout.decode(data);\n  accountInfo.mint = new PublicKey(accountInfo.mint);\n  accountInfo.owner = new PublicKey(accountInfo.owner);\n  accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null;\n    accountInfo.delegatedAmount = new u64(0);\n  } else {\n    accountInfo.delegate = new PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n}\n\nexport function parseTokenAccount(\n  account: BaseAccountInfo<Buffer>\n): AccountInfo {\n  invariant(account?.data !== null, `The account data is null`);\n  const accountInfo = AccountLayout.decode(account?.data);\n  accountInfo.mint = new PublicKey(accountInfo.mint);\n  accountInfo.owner = new PublicKey(accountInfo.owner);\n  accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null;\n    accountInfo.delegatedAmount = new u64(0);\n  } else {\n    accountInfo.delegate = new PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n}\n","import { MintLayout, Token, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type {\n  Connection,\n  GetProgramAccountsConfig,\n  Signer,\n  TransactionSignature,\n} from \"@solana/web3.js\";\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from \"@solana/web3.js\";\nimport Decimal from \"decimal.js\";\nimport invariant from \"tiny-invariant\";\n\nimport {\n  addUserPositionInstruction,\n  claimInstruction,\n  depositAllTokenTypesInstruction,\n  initializeInstruction,\n  managerClaimInstruction,\n  simulateSwapInstruction,\n  swapInstruction,\n  withdrawAllTokenTypesInstruction,\n} from \"./instructions\";\nimport {\n  calculateLiquity,\n  calculateLiquityOnlyA,\n  calculateLiquityOnlyB,\n  calculateSwapA2B,\n  calculateSwapB2A,\n  calculateTokenAmount,\n  getNearestTickByPrice,\n  sqrtPrice2Tick,\n} from \"./math\";\nimport type { Tick, TokenSwapAccount } from \"./state\";\nimport {\n  isPositionsAccount,\n  isTicksAccount,\n  isTokenSwapAccount,\n  MAX_ACCOUNT_POSITION_LENGTH,\n  parsePositionsAccount,\n  parseTicksAccount,\n  parseTokenSwapAccount,\n  POSITIONS_ACCOUNT_SIZE,\n  TICKS_ACCOUNT_SIZE,\n  TOKEN_SWAP_ACCOUNT_SIZE,\n} from \"./state\";\nimport { sendAndConfirmTransaction } from \"./util\";\nimport {\n  createAssociatedTokenAccountInstruction,\n  getAssociatedTokenAddress,\n  getTokenAccounts,\n} from \"./util/token\";\n\nexport const INIT_KEY = new PublicKey(\"11111111111111111111111111111111\");\n\nexport interface PositionInfo {\n  positionsKey: PublicKey;\n  index: Decimal;\n  positionId: PublicKey;\n  lowerTick: number;\n  upperTick: number;\n  liquity: Decimal;\n  feeGrowthInsideALast: Decimal;\n  feeGrowthInsideBLast: Decimal;\n  tokenAFee: Decimal;\n  tokenBFee: Decimal;\n}\n\nDecimal.config({\n  precision: 64,\n  rounding: Decimal.ROUND_HALF_DOWN,\n  toExpNeg: -64,\n  toExpPos: 64,\n});\n\n/**\n * The token swap class\n */\nexport class TokenSwap {\n  conn: Connection;\n  programId: PublicKey = INIT_KEY;\n  tokenSwapKey: PublicKey = INIT_KEY;\n  payer: Signer | null;\n  authority: PublicKey = INIT_KEY;\n  isLoaded = false;\n  currentTick = 0;\n  tokenSwapInfo: TokenSwapAccount = {\n    tokenSwapKey: INIT_KEY,\n    accountType: 0,\n    version: 0,\n    isInitialized: 0,\n    nonce: 0,\n    tokenProgramId: TOKEN_PROGRAM_ID,\n    manager: INIT_KEY,\n    managerTokenA: INIT_KEY,\n    managerTokenB: INIT_KEY,\n    swapTokenA: INIT_KEY,\n    swapTokenB: INIT_KEY,\n    tokenAMint: INIT_KEY,\n    tokenBMint: INIT_KEY,\n    ticksKey: INIT_KEY,\n    positionsKey: INIT_KEY,\n    curveType: 0,\n    fee: new Decimal(0),\n    managerFee: new Decimal(0),\n    tickSpace: 0,\n    currentSqrtPrice: new Decimal(0),\n    currentLiquity: new Decimal(0),\n    feeGrowthGlobal0: new Decimal(0),\n    feeGrowthGlobal1: new Decimal(0),\n    managerFeeA: new Decimal(0),\n    managerFeeB: new Decimal(0),\n  };\n  ticks: Tick[] = [];\n  positions: Map<string, PositionInfo>;\n  positionsKeys: Map<PublicKey, number>;\n\n  /**\n   * The constructor of TokenSwap\n   * @param conn The connection to use\n   * @param programId The token swap program id\n   * @param tokenSwapKey The token swap key\n   * @param payer The default pays for the transaction\n   */\n  constructor(\n    conn: Connection,\n    programId: PublicKey,\n    tokenSwapKey: PublicKey,\n    payer: Signer | null\n  ) {\n    this.conn = conn;\n    this.tokenSwapKey = tokenSwapKey;\n    this.programId = programId;\n    this.payer = payer;\n    this.positions = new Map();\n    this.positionsKeys = new Map();\n  }\n\n  /**\n   * Set the default payer\n   * @returns\n   */\n  setDefaultPayer(payer: Signer) {\n    this.payer = payer;\n  }\n\n  /**\n   * Load the token swap info\n   */\n  async load(): Promise<TokenSwap> {\n    const config: GetProgramAccountsConfig = {\n      encoding: \"base64\",\n      filters: [\n        {\n          memcmp: {\n            offset: 1,\n            bytes: this.tokenSwapKey.toBase58(),\n          },\n        },\n      ],\n    };\n    const accounts = await this.conn.getProgramAccounts(this.programId, config);\n    accounts.map((item) => {\n      if (isTokenSwapAccount(item.account)) {\n        const info = parseTokenSwapAccount(item.pubkey, item.account);\n        invariant(\n          info?.data !== undefined,\n          \"The token swap account parse failed\"\n        );\n        this.tokenSwapInfo = info.data;\n      } else if (isTicksAccount(item.account)) {\n        const info = parseTicksAccount(item.pubkey, item.account);\n        invariant(info?.data !== undefined, \"The tick account parse failed\");\n        this.ticks = info.data.ticks;\n      } else if (isPositionsAccount(item.account)) {\n        const info = parsePositionsAccount(item.pubkey, item.account);\n        invariant(\n          info?.data !== undefined,\n          \"The position account data parse failed\"\n        );\n        this.positionsKeys.set(item.pubkey, info.data.positions.length);\n        for (let i = 0; i < info.data.positions.length; i++) {\n          const p = info.data.positions[i];\n          this.positions.set(p.nftTokenId.toBase58(), {\n            positionsKey: item.pubkey,\n            index: new Decimal(i),\n            positionId: p.nftTokenId,\n            lowerTick: p.lowerTick,\n            upperTick: p.upperTick,\n            liquity: p.liquity,\n            feeGrowthInsideALast: p.feeGrowthInsideALast,\n            feeGrowthInsideBLast: p.feeGrowthInsideBLast,\n            tokenAFee: p.tokenAFee,\n            tokenBFee: p.tokenBFee,\n          });\n        }\n      } else {\n        console.log(\n          \"the account:%s length:%d unkown\",\n          item.pubkey.toString(),\n          item.account.data.length\n        );\n      }\n    });\n    if (this.authority.toString() === INIT_KEY.toString()) {\n      const [authority] = await PublicKey.findProgramAddress(\n        [this.tokenSwapKey.toBuffer()],\n        this.programId\n      );\n      this.authority = authority;\n    }\n    this.isLoaded = true;\n    this.currentTick = sqrtPrice2Tick(this.tokenSwapInfo.currentSqrtPrice);\n    return this;\n  }\n\n  /**\n   * Create a new token swap\n   * @param conn The connection to use\n   * @param programId The token swap program id\n   * @param payer Pays for the transaction\n   * @param tokenAMint The token A mint\n   * @param tokenBMint The token B mint\n   * @param manager The manager\n   * @param fee The fee of token swap\n   * @param managerFee The manager(protocol) fee of token swap\n   * @param tickSpace The tick space\n   * @param initializePrice The initilized price of token swap\n   * @param payer The pays for the transaction\n   */\n  static async createTokenSwap(\n    conn: Connection,\n    programId: PublicKey,\n    tokenAMint: PublicKey,\n    tokenBMint: PublicKey,\n    manager: PublicKey,\n    fee: Decimal,\n    managerFee: Decimal,\n    tickSpace: number,\n    initializePrice: Decimal,\n    payer: Signer,\n    isDebug = false\n  ): Promise<TokenSwap> {\n    // generate account create instruction that token swap need\n    const tokenSwapAccount = Keypair.generate();\n    const ticksAccount = Keypair.generate();\n    const positionsAccount = Keypair.generate();\n    const [authority, nonce] = await PublicKey.findProgramAddress(\n      [tokenSwapAccount.publicKey.toBuffer()],\n      programId\n    );\n    const ticksAccountLamports = await conn.getMinimumBalanceForRentExemption(\n      TICKS_ACCOUNT_SIZE\n    );\n    const positionsAccountLarports =\n      await conn.getMinimumBalanceForRentExemption(POSITIONS_ACCOUNT_SIZE);\n    const tokenSwapAccountLamports =\n      await conn.getMinimumBalanceForRentExemption(TOKEN_SWAP_ACCOUNT_SIZE);\n    const transaction = new Transaction().add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: tokenSwapAccount.publicKey,\n        lamports: tokenSwapAccountLamports,\n        space: TOKEN_SWAP_ACCOUNT_SIZE,\n        programId: programId,\n      }),\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: ticksAccount.publicKey,\n        lamports: ticksAccountLamports,\n        space: TICKS_ACCOUNT_SIZE,\n        programId: programId,\n      }),\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: positionsAccount.publicKey,\n        lamports: positionsAccountLarports,\n        space: POSITIONS_ACCOUNT_SIZE,\n        programId: programId,\n      })\n    );\n\n    // generate create token swap authority token account instruction\n    const swapTokenA = await getAssociatedTokenAddress(tokenAMint, authority);\n    const swapTokenB = await getAssociatedTokenAddress(tokenBMint, authority);\n    transaction.add(\n      createAssociatedTokenAccountInstruction(\n        tokenAMint,\n        swapTokenA,\n        authority,\n        payer.publicKey\n      ),\n      createAssociatedTokenAccountInstruction(\n        tokenBMint,\n        swapTokenB,\n        authority,\n        payer.publicKey\n      )\n    );\n\n    // generate token swap initialize instruction\n    const currentSqrtPrice = initializePrice.sqrt();\n    const tokenA = new Token(conn, tokenAMint, TOKEN_PROGRAM_ID, payer);\n    const tokenB = new Token(conn, tokenBMint, TOKEN_PROGRAM_ID, payer);\n    const managerTokenA = await tokenA.getOrCreateAssociatedAccountInfo(\n      manager\n    );\n    const managerTokenB = await tokenB.getOrCreateAssociatedAccountInfo(\n      manager\n    );\n\n    const curveType = 0;\n    transaction.add(\n      initializeInstruction(\n        programId,\n        tokenSwapAccount.publicKey,\n        authority,\n        manager,\n        managerTokenA.address,\n        managerTokenB.address,\n        swapTokenA,\n        swapTokenB,\n        ticksAccount.publicKey,\n        positionsAccount.publicKey,\n        nonce,\n        curveType,\n        fee,\n        managerFee,\n        tickSpace,\n        currentSqrtPrice\n      )\n    );\n\n    // send and confirm transaction\n    const tx = await sendAndConfirmTransaction(\n      conn,\n      transaction,\n      payer,\n      tokenSwapAccount,\n      ticksAccount,\n      positionsAccount\n    );\n    if (isDebug) {\n      console.log(tx);\n    }\n\n    return await new TokenSwap(\n      conn,\n      programId,\n      tokenSwapAccount.publicKey,\n      payer\n    ).load();\n  }\n\n  /**\n   *\n   * @param userTokenA The user address of token A\n   * @param userTokenB The user address of token B\n   * @param lowerTick The lower tick\n   * @param upperTick The upper tick\n   * @param liquity The liquity amount\n   * @param maximumAmountA The maximum amount of Token A\n   * @param maximumAmountB The maximum amount of Token B\n   * @param userTransferAuthroity The pays for the transaction\n   * @returns\n   */\n  async mintPosition(\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    lowerTick: number,\n    upperTick: number,\n    liquity: Decimal,\n    maximumAmountA: Decimal,\n    maximumAmountB: Decimal,\n    userTransferAuthroity: Signer,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (this.isLoaded) {\n      await this.load();\n    }\n    invariant(\n      lowerTick < upperTick,\n      \"The lowerTick must be less than upperTick\"\n    );\n    payer = payer !== null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n\n    // Generate create position nft token instructions\n    const nftMintAccount = Keypair.generate();\n    const nftUser = await getAssociatedTokenAddress(\n      nftMintAccount.publicKey,\n      payer.publicKey\n    );\n    const accountLamports = await Token.getMinBalanceRentForExemptAccount(\n      this.conn\n    );\n    const positionsKey = this.choosePosition();\n    invariant(positionsKey !== null, \"The position account space is full\");\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: nftMintAccount.publicKey,\n        lamports: accountLamports,\n        space: MintLayout.span,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        nftMintAccount.publicKey,\n        0,\n        this.authority,\n        null\n      ),\n      createAssociatedTokenAccountInstruction(\n        nftMintAccount.publicKey,\n        nftUser,\n        payer.publicKey,\n        payer.publicKey\n      )\n    );\n\n    // Generate mint positon instruction\n    transaction.add(\n      depositAllTokenTypesInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        userTransferAuthroity.publicKey,\n        userTokenA,\n        userTokenB,\n        this.tokenSwapInfo.swapTokenA,\n        this.tokenSwapInfo.swapTokenB,\n        nftMintAccount.publicKey,\n        nftUser,\n        this.tokenSwapInfo.ticksKey,\n        positionsKey,\n        0,\n        lowerTick,\n        upperTick,\n        liquity,\n        maximumAmountA,\n        maximumAmountB,\n        new Decimal(0)\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(\n      this.conn,\n      transaction,\n      payer,\n      userTransferAuthroity,\n      nftMintAccount\n    );\n  }\n\n  /**\n   * Increase liquity on a exist position\n   * @param positionId The position id (nft mint address)\n   * @param userTokenA The user address of token A\n   * @param userTokenB The user address of token B\n   * @param lowerTick The lower tick\n   * @param upperTick The upper tick\n   * @param liquity The liquity amount\n   * @param maximumAmountA The maximum of token A\n   * @param maximumAmountB The maximum of token B\n   * @returns\n   */\n  async increaseLiquity(\n    positionId: PublicKey,\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    liquity: Decimal,\n    maximumAmountA: Decimal,\n    maximumAmountB: Decimal,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(\n      positionInfo !== undefined,\n      `Position:${positionId.toString()} not found`\n    );\n    payer = payer !== null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n\n    const nftToken = new Token(this.conn, positionId, TOKEN_PROGRAM_ID, payer);\n    const nftUser = await nftToken.getAccountInfo(\n      await getAssociatedTokenAddress(nftToken.publicKey, payer.publicKey)\n    );\n    invariant(\n      nftUser.amount.toNumber() === 1,\n      `You not hold this position:${nftToken.publicKey.toBase58()}`\n    );\n\n    // Generate mint positon instruction\n    const transaction = new Transaction();\n    transaction.add(\n      depositAllTokenTypesInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        payer.publicKey,\n        userTokenA,\n        userTokenB,\n        this.tokenSwapInfo.swapTokenA,\n        this.tokenSwapInfo.swapTokenB,\n        positionId,\n        nftUser.address,\n        this.tokenSwapInfo.ticksKey,\n        positionInfo.positionsKey,\n        1,\n        positionInfo.lowerTick,\n        positionInfo.upperTick,\n        liquity,\n        maximumAmountA,\n        maximumAmountB,\n        positionInfo.index\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(this.conn, transaction, payer);\n  }\n\n  /**\n   * Decrease liquity, after decrease if liquity amount is zero the position will be remove\n   * @param positionId The position id (nft mint address)\n   * @param userTokenA The user address of token A\n   * @param userTokenB The user address of token B\n   * @param liquity The liquity amount\n   * @param minimumAmountA The minimum amount of token A want recv\n   * @param minimumAmountB The minimum amount of token b want recv\n   * @param userAuthroity The pays for the transaction\n   * @returns\n   */\n  async decreaseLiquity(\n    positionId: PublicKey,\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    liquity: Decimal,\n    minimumAmountA: Decimal,\n    minimumAmountB: Decimal,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(\n      positionInfo !== undefined,\n      `Position:${positionId.toString()} not found`\n    );\n    payer = payer !== null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    const nftToken = new Token(this.conn, positionId, TOKEN_PROGRAM_ID, payer);\n    const nftUser = await nftToken.getAccountInfo(\n      await getAssociatedTokenAddress(nftToken.publicKey, payer.publicKey)\n    );\n    invariant(\n      nftUser.amount.toNumber() === 1,\n      `You not hold this position:${nftToken.publicKey.toBase58()}`\n    );\n\n    // Create withdrawAllTokenTypes instruction\n    const transaction = new Transaction().add(\n      withdrawAllTokenTypesInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        payer.publicKey,\n        this.tokenSwapInfo.swapTokenA,\n        this.tokenSwapInfo.swapTokenB,\n        userTokenA,\n        userTokenB,\n        positionId,\n        nftUser.address,\n        this.tokenSwapInfo.ticksKey,\n        positionInfo.positionsKey,\n        liquity,\n        minimumAmountA,\n        minimumAmountB,\n        positionInfo.index\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(this.conn, transaction, payer);\n  }\n\n  /**\n   *\n   * @param userSource The token that user want swap out\n   * @param userDestination The token that user want swap in\n   * @param direct 0-A swap B, 1-B swap A\n   * @param amountIn The amount in\n   * @param minimumAmountOut The minimum amount out\n   * @param userTransactionAuthority Account delegated to transfer user's tokens\n   * @returns\n   */\n  async swap(\n    userSource: PublicKey,\n    userDestination: PublicKey,\n    direct: number,\n    amountIn: Decimal,\n    minimumAmountOut: Decimal,\n    userTransferAuthority: Signer,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    payer = payer !== null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    const { swapSrc, swapDst } =\n      direct === 1\n        ? {\n            swapSrc: this.tokenSwapInfo.swapTokenA,\n            swapDst: this.tokenSwapInfo.swapTokenB,\n          }\n        : {\n            swapSrc: this.tokenSwapInfo.swapTokenB,\n            swapDst: this.tokenSwapInfo.swapTokenA,\n          };\n\n    const transaction = new Transaction().add(\n      swapInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        userTransferAuthority.publicKey,\n        userSource,\n        userDestination,\n        swapSrc,\n        swapDst,\n        this.tokenSwapInfo.ticksKey,\n        amountIn,\n        minimumAmountOut\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(\n      this.conn,\n      transaction,\n      payer,\n      userTransferAuthority\n    );\n  }\n\n  async simulateSwap(amountIn: Decimal, direction: number, payer: Signer) {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    const transaction = new Transaction().add(\n      simulateSwapInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.tokenSwapInfo.ticksKey,\n        amountIn,\n        direction\n      )\n    );\n\n    const res = await this.conn.simulateTransaction(transaction, [payer]);\n    console.log(res);\n  }\n\n  /**\n   *\n   * Collect fee from specified position\n   * @param positionID The NFT token public key of position\n   * @param userTokenA The user address of token A\n   * @param userTokenB The user address of token B\n   * @param userAuthroity The pays for the transaction\n   * @returns\n   */\n  async collect(\n    positionId: PublicKey,\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(\n      positionInfo !== undefined,\n      `Position:${positionId.toString()} not found`\n    );\n    payer = payer !== null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    const nftToken = new Token(this.conn, positionId, TOKEN_PROGRAM_ID, payer);\n    const nftUser = await nftToken.getAccountInfo(\n      await getAssociatedTokenAddress(nftToken.publicKey, payer.publicKey)\n    );\n    invariant(\n      nftUser.amount.toNumber() === 1,\n      `You not hold this position:${nftToken.publicKey.toBase58()}`\n    );\n\n    const transaction = new Transaction().add(\n      claimInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        payer.publicKey,\n        this.tokenSwapInfo.swapTokenB,\n        this.tokenSwapInfo.swapTokenB,\n        userTokenA,\n        userTokenB,\n        positionId,\n        nftUser.address,\n        this.tokenSwapInfo.ticksKey,\n        positionInfo.positionsKey,\n        positionInfo.index\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(this.conn, transaction, payer);\n  }\n\n  /**\n   * Collect the manager fee\n   * @param userTokenA The manager address of token A\n   * @param userTokenB The manager address of token B\n   * @param userAuthroity The pays for the transaction\n   * @returns\n   */\n  async managerCollect(\n    userTokenA: PublicKey,\n    userTokenB: PublicKey,\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    payer = payer !== null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    const transaction = new Transaction().add(\n      managerClaimInstruction(\n        this.programId,\n        this.tokenSwapKey,\n        this.authority,\n        payer.publicKey,\n        this.tokenSwapInfo.swapTokenA,\n        this.tokenSwapInfo.swapTokenB,\n        userTokenA,\n        userTokenB\n      )\n    );\n\n    // send and confirm transaction\n    return await sendAndConfirmTransaction(this.conn, transaction, payer);\n  }\n\n  /**\n   * Add a positions account for token swap\n   * @param payer The pays for transaction\n   * @returns\n   */\n  async addPositionsAccount(\n    payer: Signer | null = null\n  ): Promise<TransactionSignature | null> {\n    if (!this.isLoaded) {\n      await this.load();\n    }\n    payer = payer !== null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    const positionsAccount = Keypair.generate();\n    const lamports = await this.conn.getMinimumBalanceForRentExemption(\n      POSITIONS_ACCOUNT_SIZE\n    );\n    const transaction = new Transaction().add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: positionsAccount.publicKey,\n        lamports,\n        space: POSITIONS_ACCOUNT_SIZE,\n        programId: this.programId,\n      }),\n      addUserPositionInstruction(\n        this.programId,\n        this.authority,\n        positionsAccount.publicKey\n      )\n    );\n\n    return await sendAndConfirmTransaction(\n      this.conn,\n      transaction,\n      payer,\n      positionsAccount\n    );\n  }\n\n  async approve(\n    userToken: PublicKey,\n    tokenMint: PublicKey,\n    amount: Decimal,\n    authority: Signer,\n    payer: Signer | null = null\n  ): Promise<void> {\n    payer = payer !== null ? payer : this.payer;\n    invariant(payer !== null, \"The payer is null\");\n    const token = new Token(this.conn, tokenMint, TOKEN_PROGRAM_ID, payer);\n    await token.approve(\n      userToken,\n      authority.publicKey,\n      payer,\n      [],\n      amount.toNumber()\n    );\n  }\n\n  /**\n   * Get user's positions\n   * @param owner The owner of position\n   * @returns The positions list\n   */\n  async getUserPositions(\n    owner: PublicKey | undefined = undefined\n  ): Promise<PositionInfo[] | null> {\n    invariant(this.isLoaded, \"The token swap not load\");\n    owner = owner !== undefined ? owner : this.payer?.publicKey;\n    invariant(owner !== undefined, \"The owner is undefined\");\n    const tokenAccounts = await getTokenAccounts(this.conn, owner);\n    const positions: PositionInfo[] = [];\n    for (let i = 0; i < tokenAccounts.length; i++) {\n      const position = this.positions.get(tokenAccounts[i].mint.toBase58());\n      if (position !== undefined) {\n        positions.push(position);\n      }\n    }\n    return positions;\n  }\n\n  /**\n   * Calculate the liquity and token A amount, when the token swap currentTick < upperTick\n   * @param tickLower The lower tick\n   * @param tickUpper the upper tick\n   * @param desiredAmountA The desired token A amount\n   * @returns\n   */\n  calculateLiquityByTokenA(\n    tickLower: number,\n    tickUpper: number,\n    desiredAmountA: Decimal\n  ): { desiredAmountB: Decimal; liquity: Decimal } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    invariant(\n      this.currentTick <= tickUpper,\n      \"The current price must less than lower price\"\n    );\n    if (this.currentTick < tickLower) {\n      return {\n        desiredAmountB: new Decimal(0),\n        liquity: calculateLiquityOnlyA(tickLower, tickUpper, desiredAmountA),\n      };\n    } else {\n      const res = calculateLiquity(\n        tickLower,\n        tickUpper,\n        desiredAmountA,\n        this.tokenSwapInfo.currentSqrtPrice,\n        0\n      );\n      return {\n        desiredAmountB: res.desiredAmountDst,\n        liquity: res.deltaLiquity,\n      };\n    }\n  }\n\n  /**\n   * Calculate the liquity and token B amount, when the token swap currentTick < upperTick\n   * @param tickLower The lower tick\n   * @param tickUpper the upper tick\n   * @param desiredAmountA The desired token B amount\n   * @returns\n   */\n  calculateLiquityByTokenB(\n    tickLower: number,\n    tickUpper: number,\n    desiredAmountB: Decimal\n  ): { desiredAmountA: Decimal; liquity: Decimal } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    invariant(\n      this.currentTick >= tickLower,\n      \"The current price must less than lower price\"\n    );\n    if (this.currentTick < tickUpper) {\n      return {\n        desiredAmountA: new Decimal(0),\n        liquity: calculateLiquityOnlyB(tickLower, tickUpper, desiredAmountB),\n      };\n    } else {\n      const res = calculateLiquity(\n        tickLower,\n        tickUpper,\n        desiredAmountB,\n        this.tokenSwapInfo.currentSqrtPrice,\n        1\n      );\n      return {\n        desiredAmountA: res.desiredAmountDst,\n        liquity: res.deltaLiquity,\n      };\n    }\n  }\n\n  /**\n   * Calculate the position current value\n   * @param positionId The position id\n   * @returns The amount of token A and token B\n   */\n  calculatePositionValue(positionId: PublicKey): {\n    liquity: Decimal;\n    amountA: Decimal;\n    amountB: Decimal;\n  } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(\n      positionInfo !== undefined,\n      `The position:${positionId.toBase58()} not found`\n    );\n    const { amountA, amountB } = calculateTokenAmount(\n      positionInfo.lowerTick,\n      positionInfo.upperTick,\n      positionInfo.liquity,\n      this.tokenSwapInfo.currentSqrtPrice\n    );\n    return {\n      liquity: positionInfo.liquity,\n      amountA,\n      amountB,\n    };\n  }\n\n  /**\n   * prepare calculate collect amount of token A and B\n   * @param positionId The position id\n   * @returns the amount of token A and B\n   */\n  preCollect(positionId: PublicKey): { amountA: Decimal; amountB: Decimal } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    const positionInfo = this.getPositionInfo(positionId);\n    invariant(\n      positionInfo !== undefined,\n      `The position:${positionId.toBase58()} not found`\n    );\n    let lowerTick: Tick | null = null;\n    let upperTick: Tick | null = null;\n    for (let i = 0; i < this.ticks.length; i++) {\n      if (this.ticks[i].tick === positionInfo.lowerTick) {\n        lowerTick = this.ticks[i];\n      }\n      if (this.ticks[i].tick === positionInfo.upperTick) {\n        upperTick = this.ticks[i];\n      }\n    }\n    invariant(\n      lowerTick !== null,\n      `The position lower tick:${positionInfo.lowerTick} not found`\n    );\n    invariant(\n      upperTick !== null,\n      `The position upper tick:${positionInfo.upperTick} not found`\n    );\n\n    let lowerFeeOutSideA = new Decimal(0);\n    let lowerFeeOutSideB = new Decimal(0);\n    let upperFeeOutSideA = new Decimal(0);\n    let upperFeeOutSideB = new Decimal(0);\n    const currentSqrtPrice = this.tokenSwapInfo.currentSqrtPrice;\n\n    if (lowerTick.tickPrice.lessThan(currentSqrtPrice)) {\n      lowerFeeOutSideA = lowerTick.feeGrowthOutside0;\n      lowerFeeOutSideB = lowerTick.feeGrowthOutside1;\n    } else {\n      lowerFeeOutSideA = this.tokenSwapInfo.feeGrowthGlobal0.sub(\n        lowerTick.feeGrowthOutside0\n      );\n      lowerFeeOutSideB = this.tokenSwapInfo.feeGrowthGlobal1.sub(\n        lowerTick.feeGrowthOutside1\n      );\n    }\n\n    if (upperTick.tickPrice.lessThan(currentSqrtPrice)) {\n      upperFeeOutSideA = this.tokenSwapInfo.feeGrowthGlobal0.sub(\n        upperTick.feeGrowthOutside0\n      );\n      upperFeeOutSideB = this.tokenSwapInfo.feeGrowthGlobal1.sub(\n        upperTick.feeGrowthOutside1\n      );\n    } else {\n      upperFeeOutSideA = upperTick.feeGrowthOutside0;\n      upperFeeOutSideB = upperTick.feeGrowthOutside1;\n    }\n\n    return {\n      amountA: this.tokenSwapInfo.feeGrowthGlobal0\n        .sub(lowerFeeOutSideA)\n        .sub(upperFeeOutSideA)\n        .sub(positionInfo.feeGrowthInsideALast)\n        .mul(positionInfo.liquity)\n        .add(positionInfo.tokenAFee),\n      amountB: this.tokenSwapInfo.feeGrowthGlobal1\n        .sub(lowerFeeOutSideB)\n        .sub(upperFeeOutSideB)\n        .sub(positionInfo.feeGrowthInsideBLast)\n        .mul(positionInfo.liquity)\n        .add(positionInfo.tokenBFee),\n    };\n  }\n\n  /**\n   * Prepare calculate A swap B\n   * @param amountIn The amount input of token A\n   * @returns amountOut:The amount out of token B, amountUsed:The used of amountIn, afterPrice:The price after calculate, afterLiquity: The liquity after calculate\n   */\n  preSwapA(amountIn: Decimal): {\n    amountOut: Decimal;\n    amountUsed: Decimal;\n    feeUsed: Decimal;\n    afterLiquity: Decimal;\n    impactA: Decimal;\n    impactB: Decimal;\n    transactionPriceA: Decimal;\n    transactionPriceB: Decimal;\n    afterPriceA: Decimal;\n    afterPriceB: Decimal;\n  } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    const res = calculateSwapA2B(\n      this.ticks,\n      this.tokenSwapInfo.currentSqrtPrice,\n      this.tokenSwapInfo.fee,\n      this.tokenSwapInfo.currentLiquity,\n      amountIn\n    );\n    const currentPriceA = this.tokenSwapInfo.currentSqrtPrice.pow(2);\n    const currentPriceB = new Decimal(1).div(currentPriceA);\n    const transactionPriceA = res.amountOut.div(res.amountUsed);\n    const transactionPriceB = res.amountUsed.div(res.amountOut);\n    const impactA = transactionPriceA\n      .sub(currentPriceA)\n      .div(currentPriceA)\n      .abs();\n    const impactB = transactionPriceB\n      .sub(currentPriceB)\n      .div(currentPriceB)\n      .abs();\n\n    const afterPriceA = res.afterPrice.pow(2);\n    const afterPriceB = new Decimal(1).div(afterPriceA);\n\n    return {\n      amountOut: res.amountOut,\n      amountUsed: res.amountUsed,\n      feeUsed: res.feeUsed,\n      afterPriceA,\n      afterPriceB,\n      afterLiquity: res.afterLiquity,\n      impactA,\n      impactB,\n      transactionPriceA,\n      transactionPriceB,\n    };\n  }\n\n  /**\n   * Prepare calculate B swap A\n   * @param amountIn The amount input of token B\n   * @returns amountOut:The amount out of token A, amountUsed:The used of amountIn, afterPrice:The price after calculate, afterLiquity: The liquity after calculate\n   */\n  preSwapB(amountIn: Decimal): {\n    amountOut: Decimal;\n    amountUsed: Decimal;\n    feeUsed: Decimal;\n    afterLiquity: Decimal;\n    impactA: Decimal;\n    impactB: Decimal;\n    transactionPriceA: Decimal;\n    transactionPriceB: Decimal;\n    afterPriceA: Decimal;\n    afterPriceB: Decimal;\n  } {\n    invariant(this.isLoaded, \"The token swap not load\");\n    const res = calculateSwapB2A(\n      this.ticks,\n      this.tokenSwapInfo.currentSqrtPrice,\n      this.tokenSwapInfo.fee,\n      this.tokenSwapInfo.currentLiquity,\n      amountIn\n    );\n    const currentPriceA = this.tokenSwapInfo.currentSqrtPrice.pow(2);\n    const currentPriceB = new Decimal(1).div(currentPriceA);\n    const transactionPriceA = res.amountUsed.div(res.amountOut);\n    const transactionPriceB = res.amountOut.div(res.amountUsed);\n    const impactA = transactionPriceA\n      .sub(currentPriceA)\n      .div(currentPriceA)\n      .abs();\n    const impactB = transactionPriceB\n      .sub(currentPriceB)\n      .div(currentPriceB)\n      .abs();\n    const afterPriceA = res.afterPrice.pow(2);\n    const afterPriceB = new Decimal(1).div(afterPriceA);\n\n    return {\n      amountOut: res.amountOut,\n      amountUsed: res.amountUsed,\n      feeUsed: res.feeUsed,\n      afterLiquity: res.afterLiquity,\n      impactA,\n      impactB,\n      transactionPriceA,\n      transactionPriceB,\n      afterPriceA,\n      afterPriceB,\n    };\n  }\n\n  /**\n   * Get nearest tick by price\n   * @param price The price\n   * @returns The tick\n   */\n  getNearestTickByPrice(price: Decimal): number {\n    invariant(this.isLoaded, \"The token swap not load\");\n    return getNearestTickByPrice(price, this.tokenSwapInfo.tickSpace);\n  }\n\n  /* @internal */\n  getPositionInfo(positionId: PublicKey): PositionInfo | undefined {\n    invariant(this.isLoaded, \"The token swap not load\");\n    return this.positions.get(positionId.toBase58());\n  }\n\n  /* @internal */\n  choosePosition(): PublicKey | null {\n    invariant(this.isLoaded, \"The token swap not load\");\n    for (const [key, val] of this.positionsKeys) {\n      if (val < MAX_ACCOUNT_POSITION_LENGTH) {\n        return key;\n      }\n    }\n    return null;\n  }\n\n  /* for debug */\n  log() {\n    const payer =\n      this.payer !== null ? this.payer.publicKey.toBase58() : \"null\";\n    console.log(\n      JSON.stringify(\n        {\n          programId: this.programId.toString(),\n          tokenSwapKey: this.tokenSwapKey.toString(),\n          payer: payer,\n          authority: this.authority.toString(),\n          currentTick: this.currentTick,\n          currentPrice: this.tokenSwapInfo.currentSqrtPrice.pow(2).toString(),\n          tokenSwapInfo: {\n            accountType: this.tokenSwapInfo.accountType,\n            version: this.tokenSwapInfo.version,\n            isInitialized: this.tokenSwapInfo.isInitialized,\n            nonce: this.tokenSwapInfo.nonce,\n            manager: this.tokenSwapInfo.manager.toString(),\n            managerTokenA: this.tokenSwapInfo.managerTokenA.toString(),\n            managerTokenB: this.tokenSwapInfo.managerTokenB.toString(),\n            swapTokenA: this.tokenSwapInfo.swapTokenA.toString(),\n            swapTokenB: this.tokenSwapInfo.swapTokenB.toString(),\n            tokenAMint: this.tokenSwapInfo.tokenAMint.toString(),\n            tokenBMint: this.tokenSwapInfo.tokenBMint.toString(),\n            ticksKey: this.tokenSwapInfo.ticksKey.toString(),\n            positionsKey: this.tokenSwapInfo.positionsKey.toString(),\n            curveType: this.tokenSwapInfo.curveType,\n            fee: this.tokenSwapInfo.fee,\n            managerFee: this.tokenSwapInfo.managerFee,\n            tickSpace: this.tokenSwapInfo.tickSpace,\n            currentSqrtPrice: this.tokenSwapInfo.currentSqrtPrice,\n            currentLiquity: this.tokenSwapInfo.currentLiquity,\n            feeGrowthGlobal0: this.tokenSwapInfo.feeGrowthGlobal0,\n            feeGrowthGlobal1: this.tokenSwapInfo.feeGrowthGlobal1,\n            managerFeeA: this.tokenSwapInfo.managerFeeA,\n            managerFeeB: this.tokenSwapInfo.managerFeeB,\n          },\n          positions: Object.fromEntries(this.positions),\n          positionsKeys: Object.fromEntries(this.positionsKeys),\n          ticks: this.ticks,\n        },\n        null,\n        4\n      )\n    );\n  }\n}\n"],"names":["calculateLiquity","tickLower","tickUpper","desiredAmountSrc","currentSqrtPrice","direct","invariant","lowerSqrtPrice","tick2SqrtPrice","upperSqrtPrice","greaterThanOrEqualTo","lessThanOrEqualTo","one","Decimal","deltaLiquity","div","sub","desiredAmountDst","mul","calculateTokenAmount","liquity","lessThan","amountA","amountB","greaterThan","calculateLiquityOnlyA","desiredAmountA","calculateLiquityOnlyB","desiredAmountB","calculateLiquityTable","ticks","minLiquity","maxLiquity","liquitys","lowerTick","upperTick","amount","i","length","equals","tick","liquityNet","push","add","calculateSlidTokenAmount","slid","toString","maxSqrtPrice","sqrt","minSqrtPrice","constant","minRes","maxRes","maxAmountA","minAmountA","maxAmountB","minAmountB","MAX_TICK","MIN_TICK","PIECES","PRICE_OFFSET","MAX_PRICE","pow","MIN_PRICE","MAX_SQRT_PRICE","toDP","MIN_SQRT_PRICE","sqrtPrice2Tick","sqrtPrice","log","ROUND_HALF_UP","toNumber","price2Tick","price","tick2Price","getNearestTick","tickSpace","getNearestTickBySqrtPrice","t","m","getNearestTickByPrice","calculateSwapA2B","fee","currentLiquity","amountIn","tickPrice","out","remind","remindWithFee","feeUsed","amountUsed","maxAmountIn","fullStepFee","ROUND_DOWN","ROUND_UP","swapA2B","amountOut","afterSqrtPrice","afterPrice","afterLiquity","calculateSwapB2A","swapB2A","delta_increase","config","precision","rounding","toExpNeg","toExpPos","TEN","P64","MAX_INT64","MIN_INT64","neg","MAX_UINT64","MAX_INT128","MIN_INT128","MAX_UINT128","MAX_PRECISION","DecimalExt","from64Buffer","buffer","Math","abs","console","ss","v","slice","bn","BN","join","fromU64Buffer","from128Buffer","fromU128Buffer","to64Buffer","round","isNeg","toBuffer","forEach","item","index","input","toU64Buffer","to128Buffer","toU128Buffer","encodeDecode","layout","decode","bind","encode","publicKey","property","blob","publicKeyLayout","offset","src","PublicKey","uint64","int64","int128","uint128","decimal64","decimal64Layout","_decode","_encode","Buffer","from","decimal","decimalU64","decimalU64Layout","decimal128","decimal128Layout","decimalU128","decimalU128Layout","val","POSITIONS_ACCOUNT_SIZE","POSITIONS_ACCOUNT_TYPE","PositionLayout","struct","s32","PositionsAccountLayout","u8","MAX_ACCOUNT_POSITION_LENGTH","floor","span","isPositionsAccount","info","data","readUInt8","parsePositionsAccount","pubkey","swapVersion","tokenSwapKey","accountType","len","dataFlat","positionSpan","positionsBuffer","positions","seq","positionsAccount","TICKS_ACCOUNT_SIZE","TICKS_ACCOUNT_TYPE","TickLayout","isTicksAccount","parseTicksAccount","Layout","tickSpan","ticksBuffer","ticksAccount","TOKEN_SWAP_ACCOUNT_TYPE","TokenSwapAccountLayout","u32","TOKEN_SWAP_ACCOUNT_SIZE","isTokenSwapAccount","parseTokenSwapAccount","tokenSwapAccount","undefined","TokenSwapInstruction","DataLayout","addUserPositionInstruction","programId","authority","positionsKey","alloc","instruction","AddUserPosition","keys","isSigner","isWritable","TOKEN_PROGRAM_ID","TransactionInstruction","claimInstruction","userTransferAuthority","swapTokenA","swapTokenB","userTokenA","userTokenB","nftMint","nftUser","ticksKey","positionIndex","Claim","depositAllTokenTypesInstruction","isNewPosition","liquityAmount","maximumTokenA","maximumTokenB","DepositAllTokenTypes","initializeInstruction","manager","managerTokenA","managerTokenB","nonce","curveType","managerFee","Initialize","feeGrowthGlobal0","feeGrowthGlobal1","managerFeeA","managerFeeB","managerClaimInstruction","ManagerClaim","simulateSwapInstruction","direction","SimulateSwap","swapInstruction","userSource","userDestination","swapSource","swapDestination","minimumAmountOut","Swap","withdrawAllTokenTypesInstruction","minimumTokenA","minimumTokenB","WithdrawAllTokenTypes","chooseCluster","dotenv","process","env","LIVE","CLUSTER","cluster","url","RPC_URL","clusterApiUrl","urlTls","walletUrl","WALLET_URL","sendAndConfirmTransaction","conn","transaction","signers","realSendAndConfirmTransaction","skipPreflight","commitment","preflightCommitment","getAssociatedTokenAddress","tokenMint","owner","Token","ASSOCIATED_TOKEN_PROGRAM_ID","createAssociatedTokenAccountInstruction","associatedAccount","payer","getTokenAccount","address","getAccountInfo","account","toBase58","accountInfo","parseTokenAccount","getTokenAccounts","getTokenAccountsByOwner","accounts","accountInfos","value","parseTokenAccountData","AccountLayout","mint","u64","fromBuffer","delegateOption","delegate","delegatedAmount","isInitialized","state","isFrozen","isNativeOption","rentExemptReserve","isNative","closeAuthorityOption","closeAuthority","INIT_KEY","ROUND_HALF_DOWN","TokenSwap","version","tokenProgramId","tokenAMint","tokenBMint","Map","positionsKeys","setDefaultPayer","load","encoding","filters","memcmp","bytes","getProgramAccounts","map","tokenSwapInfo","set","p","nftTokenId","positionId","feeGrowthInsideALast","feeGrowthInsideBLast","tokenAFee","tokenBFee","findProgramAddress","isLoaded","currentTick","createTokenSwap","initializePrice","isDebug","Keypair","generate","getMinimumBalanceForRentExemption","ticksAccountLamports","positionsAccountLarports","tokenSwapAccountLamports","Transaction","SystemProgram","createAccount","fromPubkey","newAccountPubkey","lamports","space","tokenA","tokenB","getOrCreateAssociatedAccountInfo","tx","mintPosition","maximumAmountA","maximumAmountB","userTransferAuthroity","nftMintAccount","getMinBalanceRentForExemptAccount","accountLamports","choosePosition","MintLayout","createInitMintInstruction","increaseLiquity","positionInfo","getPositionInfo","nftToken","decreaseLiquity","minimumAmountA","minimumAmountB","swap","swapSrc","swapDst","simulateSwap","simulateTransaction","res","collect","managerCollect","addPositionsAccount","approve","userToken","token","getUserPositions","tokenAccounts","position","get","calculateLiquityByTokenA","calculateLiquityByTokenB","calculatePositionValue","preCollect","lowerFeeOutSideA","lowerFeeOutSideB","upperFeeOutSideA","upperFeeOutSideB","feeGrowthOutside0","feeGrowthOutside1","preSwapA","currentPriceA","currentPriceB","transactionPriceA","transactionPriceB","impactA","impactB","afterPriceA","afterPriceB","preSwapB","key","JSON","stringify","currentPrice","Object","fromEntries"],"mappings":"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"}